{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Portal"
    },
    "host": "localhost:10474",
    "schemes": [ "http" ],
    "paths": {
        "/api/Admins/{id}": {
            "get": {
                "tags": [ "Admins" ],
                "summary": "Gets a single admin from the system.",
                "operationId": "Admins_GetAdmin",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": { "description": "User not logged in or not authorized." },
                    "404": { "description": "Admin not found." },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/AdminResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "put": {
                "tags": [ "Admins" ],
                "summary": "edits admin information from the system",
                "operationId": "Admins_PutUpdateAdmin",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/UpdateAdminRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an admin or doesnt exsist." },
                    "204": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/AdminResponse" }
                        }
                    },
                    "404": { "description": "Bad ID" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Admins": {
            "get": {
                "tags": [ "Admins" ],
                "summary": "Gets all admins from the system",
                "operationId": "Admins_GetAdmins",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[AdminResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "Admins" ],
                "summary": "Adds an administrator to the system",
                "operationId": "Admins_PostAdmins",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/NewAdminRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin. Invalid name or email addresses." },
                    "409": { "description": "User already exists" },
                    "400": { "description": "Password is not a @microsoft.com email" },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/AdminResponse" }
                        }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/calendar/share": {
            "post": {
                "tags": [ "Calendar" ],
                "summary": "Creates a share request and emails the info to the email provided",
                "operationId": "Calendar_PostShareCalendar",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The email of the person to share with",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CalendarShareRequest" }
                    }
                ],
                "responses": {
                    "204": { "description": "Success" },
                    "401": { "description": "User not logged in" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/courses/{id}/disable": {
            "put": {
                "tags": [ "Courses" ],
                "summary": "Used to disable courses from the system.",
                "operationId": "Courses_PutDisableCourse",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Courses and course codes",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not signed in/not an admin" },
                    "404": { "description": "Incorrect Course" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/courses/{id}/enable": {
            "put": {
                "tags": [ "Courses" ],
                "summary": "Used to enable courses from the system.",
                "operationId": "Courses_PutEnableCourse",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Courses and course codes",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not signed in/not an admin" },
                    "404": { "description": "Incorrect Course" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Courses": {
            "get": {
                "tags": [ "Courses" ],
                "summary": "Used to get a all the courses",
                "operationId": "Courses_GetCourses",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "400": { "description": "Not a valid course or course does not exsits." },
                    "401": { "description": "User not signed in." },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[CourseResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "Courses" ],
                "summary": "used to add courses",
                "operationId": "Courses_PostAddCourse",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "course",
                        "in": "body",
                        "description": "Courses and course codes",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CourseRequest" }
                    }
                ],
                "responses": {
                    "400": { "description": "No course name" },
                    "401": { "description": "User not logged In or not an Admin" },
                    "409": { "description": "Course already exist in the system" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CourseResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Courses/{id}": {
            "get": {
                "tags": [ "Courses" ],
                "summary": "Used to get a single course",
                "operationId": "Courses_GetSingleCourse",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Courses and course codes",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "404": { "description": "Not a valid course or course does not exsits." },
                    "401": { "description": "User not signed in." },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CourseResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "put": {
                "tags": [ "Courses" ],
                "summary": "edits course information on the system",
                "operationId": "Courses_PutCourse",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CourseRequest" }
                    }
                ],
                "responses": {
                    "409": { "description": "Course already exist in the system" },
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Course not found" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/DroppedOut": {
            "get": {
                "tags": [ "DroppedOut" ],
                "summary": "Gets all drop out students",
                "operationId": "DroppedOut_GetDroppedOut",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[DroppedOutResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/DroppedOut/{id}": {
            "get": {
                "tags": [ "DroppedOut" ],
                "summary": "Individual students that have dropped out of the program.",
                "operationId": "DroppedOut_GetDroppedOutStudent",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": { "description": "User not an admin.User not authorized." },
                    "404": { "description": "Invalid id. Student does not exist." }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "DroppedOut" ],
                "summary": "Sets a user as dropped out",
                "operationId": "DroppedOut_PostDroppedOut",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Reason for dropping out, date of drop out, date when last recieved stipend &amp; amount recieved",
                        "required": true,
                        "schema": { "$ref": "#/definitions/DroppedOutRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin or not the user who is dropping out" },
                    "404": { "description": "User not found" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/exam/{id}/disable": {
            "put": {
                "tags": [ "Exam" ],
                "summary": "Used to disable an Exam from the system.",
                "operationId": "Exam_PutDisableExam",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exam ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not an admin or no authorized" },
                    "404": { "description": "Incorrect Exam" },
                    "204": { "description": "Return no content" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/exam/{id}/enable": {
            "put": {
                "tags": [ "Exam" ],
                "summary": "Used to Enable Exams from the system.",
                "operationId": "Exam_PutEnableExam",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exam ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not signed in or not an admin." },
                    "404": { "description": "Incorrect Exam" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Exam": {
            "get": {
                "tags": [ "Exam" ],
                "summary": "Gets a list of all the exmas.",
                "operationId": "Exam_GetExams",
                "consumes": [ ],
                "produces": [ "application/json", "text/json" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not authorized to view exams." },
                    "200": {
                        "description": "Succcess",
                        "schema": { "$ref": "#/definitions/CollectionResponse[ExamResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "Exam" ],
                "summary": "Add exams to the program.",
                "operationId": "Exam_PostExams",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json" ],
                "parameters": [
                    {
                        "name": "exam",
                        "in": "body",
                        "description": "Exams and Exam codes",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ExamRequest" }
                    }
                ],
                "responses": {
                    "400": { "description": "No Exam name" },
                    "401": { "description": "User not an Admin. Not Authorized" },
                    "409": { "description": "Exams already exists in the sytem." },
                    "201": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/ExamResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Exam/{id}": {
            "get": {
                "tags": [ "Exam" ],
                "summary": "Gets a single exams from the system.",
                "operationId": "Exam_GetSingleExam",
                "consumes": [ ],
                "produces": [ "application/json", "text/json" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or no authorized." },
                    "404": { "description": "Exam not found." },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/ExamResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "put": {
                "tags": [ "Exam" ],
                "summary": "Edits Exams  information on the system.",
                "operationId": "Exam_PutExam",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ExamRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not authorized or not an admin." },
                    "404": { "description": "Exam not found" },
                    "409": { "description": "Exam alreay exisits in the system." },
                    "204": { "description": "Return Accepted" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Feedback": {
            "post": {
                "tags": [ "Feedback" ],
                "summary": "used to login to the service",
                "operationId": "Feedback_PostFeedback",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "feedback",
                        "in": "body",
                        "description": "Comment message",
                        "required": true,
                        "schema": { "$ref": "#/definitions/FeedbackRequest" }
                    }
                ],
                "responses": {
                    "400": { "description": "Invalid feedback" },
                    "401": { "description": "User not logged In or not a Student" },
                    "201": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/FeedbackResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/students/furtherEmployment": {
            "get": {
                "tags": [ "FurtherEmployment" ],
                "summary": "Gets all students who got employment",
                "operationId": "FurtherEmployment_GetAllStudentsWithFurtherEmployment",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[FurtherEmploymentResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/students/{id}/furtherEmployment": {
            "get": {
                "tags": [ "FurtherEmployment" ],
                "summary": "Gets a specific students who got employment",
                "operationId": "FurtherEmployment_GetStudentWithFurtherEmployment",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Student not found" },
                    "400": { "description": "Student has not been employeed" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/FurtherEmploymentResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "FurtherEmployment" ],
                "summary": "Used to set further employment info for a student",
                "operationId": "FurtherEmployment_PostFurtherEmployment",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Details of users further employment",
                        "required": true,
                        "schema": { "$ref": "#/definitions/FurtherEmploymentRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an admin or trying to change another students info." },
                    "404": { "description": "User not found, not a student or not active." },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Health": {
            "get": {
                "tags": [ "Health" ],
                "operationId": "Health_Get",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/Object" }
                    }
                },
                "deprecated": false
            }
        },
        "/api/students/{id}/host/{hostId}": {
            "post": {
                "tags": [ "HostEmployer" ],
                "summary": "Associates a student with a host employeer",
                "operationId": "HostEmployer_PostAssociateStudentToHostEmployeer",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hostId",
                        "in": "path",
                        "description": "Host employeer ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not authorised or not admin" },
                    "404": { "description": "host or student not found" },
                    "204": { "description": "success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/hostEmployers/{id}/disable": {
            "put": {
                "tags": [ "HostEmployer" ],
                "summary": "Disables a Host Employer from the system",
                "operationId": "HostEmployer_PutDisableHostEmployer",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Host Employer not found" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/hostEmployers/{id}/enable": {
            "put": {
                "tags": [ "HostEmployer" ],
                "summary": "Enables a Host Employer from the system",
                "operationId": "HostEmployer_PutEnableHostEmployer",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Host Employer not found" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/HostEmployer/{id}": {
            "get": {
                "tags": [ "HostEmployer" ],
                "summary": "Gets a Host Employer and the Students",
                "operationId": "HostEmployer_GetHostEmployer",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Host Employer not found. Or bad host employer ID" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/HostEmployerResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "put": {
                "tags": [ "HostEmployer" ],
                "summary": "Used to update an existing host Employer.",
                "operationId": "HostEmployer_PutHostEmployer",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/HostEmployerRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "ID not found" },
                    "409": { "description": "Name already in use" },
                    "204": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/TrainingProviderResponse" }
                        }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/HostEmployer": {
            "get": {
                "tags": [ "HostEmployer" ],
                "summary": "Gets all Host Employers from the system",
                "operationId": "HostEmployer_GetHostEmployers",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an Admin" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[HostEmployerResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "HostEmployer" ],
                "summary": "Adds a Host Employer to the system",
                "operationId": "HostEmployer_PostAddHostEmployer",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "hostEmployer",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/HostEmployerRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not signed in or not an admin." },
                    "409": { "description": "Name already in use" },
                    "400": { "description": "Required data not provided" },
                    "201": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/StudentResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/login/confirmPasswordReset": {
            "post": {
                "tags": [ "Login" ],
                "summary": "Finishes the password reset process",
                "operationId": "Login_PostConfirmPasswordReset",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Email for user",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ConfirmPasswordResetRequest" }
                    }
                ],
                "responses": {
                    "400": { "description": "No token or no/invalid password" },
                    "404": { "description": "Bad token" },
                    "204": { "description": "Success" }
                },
                "deprecated": false
            }
        },
        "/api/login/beginPasswordReset": {
            "post": {
                "tags": [ "Login" ],
                "summary": "Starts the password reset process",
                "operationId": "Login_PostStartPasswordReset",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Email for user",
                        "required": true,
                        "schema": { "$ref": "#/definitions/BeginPasswordResetRequest" }
                    }
                ],
                "responses": {
                    "400": { "description": "Bad email" },
                    "204": { "description": "Success" }
                },
                "deprecated": false
            }
        },
        "/api/Login": {
            "post": {
                "tags": [ "Login" ],
                "summary": "used to login to the service",
                "operationId": "Login_PostLogin",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Username &amp; password",
                        "required": true,
                        "schema": { "$ref": "#/definitions/LoginRequest" }
                    }
                ],
                "responses": {
                    "400": { "description": "Email or password not provided. Email or Password incorrect." },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/LoginResponse" }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Reward": {
            "get": {
                "tags": [ "Reward" ],
                "summary": "Gets all the rewards from the system.",
                "operationId": "Reward_GetStudentRewardsIcon",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/CollectionResponse[RewardResponse]" }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [ "Reward" ],
                "summary": "Used to Add students rewards to the system",
                "operationId": "Reward_PostAddStudentReward",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "reward",
                        "in": "body",
                        "description": "Name, Decription, ImageId &amp; Reward State;",
                        "required": true,
                        "schema": { "$ref": "#/definitions/RewardRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an administator, or doesnt exist." },
                    "400": { "description": "Bad or no name" },
                    "409": { "description": "Reward with this name is already in use" },
                    "201": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/RewardResponse" }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Reward/{id}": {
            "get": {
                "tags": [ "Reward" ],
                "summary": "Allows the student to view a single icon reward.",
                "operationId": "Reward_GetReward",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "400": { "description": "User not logged in or not authorized." },
                    "404": { "description": "Reward not found" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/RewardResponse" }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [ "Reward" ],
                "summary": "Used to edit rewards in the system.",
                "operationId": "Reward_PutStudentRewards",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": { "$ref": "#/definitions/RewardsRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not authorized." },
                    "404": { "description": "Reward not found" },
                    "409": { "description": "Return conflict if reward already exisits." },
                    "200": { "description": "success" }
                },
                "deprecated": false
            }
        },
        "/api/students/{id}/courses": {
            "get": {
                "tags": [ "Students" ],
                "summary": "Gets the courses a student is on",
                "operationId": "Students_GetStudentCourses",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "student id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an admin or attempting to check someone elses course" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[StudentCourseResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/students/{id}/rewards": {
            "get": {
                "tags": [ "Students" ],
                "summary": "Gets all Claimed Rewards of a student",
                "operationId": "Students_GetStudentRewards",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "student id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an admin or attempting to check someone elses course" },
                    "404": { "description": "User not found" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[ClaimedRewardsResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/students/{id}/trainingproviders": {
            "get": {
                "tags": [ "Students" ],
                "summary": "Gets the training provider a student belongs too.",
                "operationId": "Students_GetTrainingProviders",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "param",
                        "in": "body",
                        "description": "Filter Paramenters",
                        "required": false,
                        "schema": { "$ref": "#/definitions/FilterParameters" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an admin or trying to see a students training provider wihout authorization." },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[TrainingProviderResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Students/{id}": {
            "get": {
                "tags": [ "Students" ],
                "summary": "Gets one student from the system",
                "operationId": "Students_GetStudent",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Invalid id" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/StudentResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "put": {
                "tags": [ "Students" ],
                "summary": "Used to edit students on the system",
                "operationId": "Students_PutStudent",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Users details",
                        "required": true,
                        "schema": { "$ref": "#/definitions/StudentsRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an administator, or user trying to change the other user." },
                    "404": { "description": "User not found." },
                    "409": { "description": "Email already in use." },
                    "400": { "description": "Email is invalid." },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/Students": {
            "get": {
                "tags": [ "Students" ],
                "summary": "Gets students from the system for admins",
                "operationId": "Students_GetStudents",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[StudentResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "Students" ],
                "summary": "Used to Add students to the system",
                "operationId": "Students_PostStudents",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Username &amp; password",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CreateStudentRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an administator, or doesnt exist." },
                    "400": { "description": "Bad or no email" },
                    "409": { "description": "Email already in use" },
                    "201": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/StudentResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/trainingproviders/{id}/add courses": {
            "post": {
                "tags": [ "TrainingProviders" ],
                "summary": "Add Course to a training Provider.",
                "operationId": "TrainingProviders_PostAddCourseToTrainingProvider",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": { "$ref": "#/definitions/AddCourseToTrainingProviderRequest" }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not a admin" },
                    "404": { "description": "Training provider not found or already exists." },
                    "409": { "description": "Course already exists with chosen training provider." },
                    "200": { "description": "Success, no content" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/trainingproviders/{id}/disable": {
            "put": {
                "tags": [ "TrainingProviders" ],
                "summary": "Disables TrainingProviders from the system, but does not remove them from the database.",
                "operationId": "TrainingProviders_PutDisableTrainingProvider",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "Training provider not found" },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/TrainingProviders": {
            "get": {
                "tags": [ "TrainingProviders" ],
                "summary": "Gets all TrainingProviders from the system",
                "operationId": "TrainingProviders_GetTrainingProviders",
                "consumes": [ ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in" },
                    "200": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/CollectionResponse[TrainingProviderResponse]" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            },
            "post": {
                "tags": [ "TrainingProviders" ],
                "summary": "Adds a training provider to the system",
                "operationId": "TrainingProviders_PostTrainingProviders",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "trainingProvider",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/TrainingProviderRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not signed in or not an admin." },
                    "409": { "description": "Name already in use" },
                    "400": { "description": "Required data not provided" },
                    "201": {
                        "description": "Success",
                        "schema": { "$ref": "#/definitions/TrainingProviderResponse" }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/TrainingProviders/{id}": {
            "put": {
                "tags": [ "TrainingProviders" ],
                "summary": "Used to update an existing training provider.",
                "operationId": "TrainingProviders_PutTrainingProviders",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/TrainingProviderRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin" },
                    "404": { "description": "ID not found" },
                    "409": { "description": "Name already in use" },
                    "204": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/TrainingProviderResponse" }
                        }
                    }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/users/{id}/password": {
            "post": {
                "tags": [ "Users" ],
                "summary": "Used to reset a password for student/admin",
                "operationId": "Users_PostChangePassword",
                "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ResetPasswordRequest" }
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in, not an admin or doesnt exsist or trying to change someone elses password." },
                    "404": { "description": "User Not found." },
                    "400": { "description": "Password not complex enough." },
                    "204": { "description": "Success" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/users/{id}/disable": {
            "put": {
                "tags": [ "Users" ],
                "summary": "Disables an admin from the system, but doesn't remove them from them from the database.",
                "operationId": "Users_PutDisable",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin.." },
                    "404": { "description": "User ID doesn't exsist." },
                    "204": { "description": "Success" },
                    "400": { "description": "Can't denable yourself" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        },
        "/api/users/{id}/enable": {
            "put": {
                "tags": [ "Users" ],
                "summary": "Enables an admin in the system",
                "operationId": "Users_PutEnable",
                "consumes": [ ],
                "produces": [ ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": { "description": "User not logged in or not an admin.." },
                    "404": { "description": "User ID doesn't exsist." },
                    "204": { "description": "Success" },
                    "400": { "description": "Can't denable yourself" }
                },
                "deprecated": false,
                "security": [ { "oauth": [ ] } ]
            }
        }
    },
    "definitions": {
        "AdminResponse": {
            "type": "object",
            "properties": {
                "Email": { "type": "string" },
                "FirstName": { "type": "string" },
                "Id": { "type": "string" },
                "LastName": { "type": "string" },
                "Self": { "type": "boolean" },
                "State": {
                    "enum": [ "WaitingForPinConfirm", "Active", "Disabled" ],
                    "type": "string"
                }
            }
        },
        "UpdateAdminRequest": {
            "type": "object",
            "properties": {
                "FirstName": { "type": "string" },
                "LastName": { "type": "string" }
            }
        },
        "FilterParameters": {
            "type": "object",
            "properties": {
                "Skip": {
                    "format": "int32",
                    "type": "integer"
                },
                "Top": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CollectionResponse[AdminResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/AdminResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "NewAdminRequest": {
            "type": "object",
            "properties": {
                "Email": { "type": "string" },
                "FirstName": { "type": "string" },
                "LastName": { "type": "string" }
            }
        },
        "CalendarShareRequest": {
            "type": "object",
            "properties": { "Email": { "type": "string" } }
        },
        "CollectionResponse[CourseResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/CourseResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CourseResponse": {
            "type": "object",
            "properties": {
                "Code": { "type": "string" },
                "Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": { "type": "string" },
                "State": {
                    "enum": [ "Active", "Disabled" ],
                    "type": "string"
                }
            }
        },
        "CourseRequest": {
            "type": "object",
            "properties": {
                "Code": { "type": "string" },
                "Name": { "type": "string" }
            }
        },
        "CollectionResponse[DroppedOutResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/DroppedOutResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DroppedOutResponse": {
            "type": "object",
            "properties": {
                "AmountLastStipendRecieved": {
                    "format": "double",
                    "type": "number"
                },
                "DateLastStipendRecieved": {
                    "format": "date-time",
                    "type": "string"
                },
                "DropOutReason": { "type": "string" },
                "DroppedOutDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "State": {
                    "enum": [ "NotAStudent", "Active", "DroppedOut", "Employeed" ],
                    "type": "string"
                }
            }
        },
        "DroppedOutRequest": {
            "type": "object",
            "properties": {
                "AmountLastStipendRecieved": {
                    "format": "double",
                    "type": "number"
                },
                "DateLastStipendRecieved": {
                    "format": "date-time",
                    "type": "string"
                },
                "DropOutReason": { "type": "string" },
                "DroppedOutDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "CollectionResponse[ExamResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/ExamResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ExamResponse": {
            "type": "object",
            "properties": {
                "Code": { "type": "string" },
                "ExamName": { "type": "string" },
                "Passed": {
                    "enum": [ "Passed", "Failed" ],
                    "type": "string"
                },
                "Result": { "type": "string" },
                "State": {
                    "enum": [ "Active", "Disabled" ],
                    "type": "string"
                },
                "Student": { "$ref": "#/definitions/User" }
            }
        },
        "User": {
            "required": [ "Email" ],
            "type": "object",
            "properties": {
                "AmountLastStipendReceived": {
                    "format": "double",
                    "type": "number"
                },
                "City": { "type": "string" },
                "DateLastStipendReceived": {
                    "format": "date-time",
                    "type": "string"
                },
                "DropOutDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DropOutReason": { "type": "string" },
                "Email": { "type": "string" },
                "FirstName": { "type": "string" },
                "FurtherEmploymentCompanyName": { "type": "string" },
                "FurtherEmploymentEmail": { "type": "string" },
                "FurtherEmploymentManagerName": { "type": "string" },
                "FurtherEmploymentPhoneNumber": { "type": "string" },
                "FurtherEmploymentPosition": { "type": "string" },
                "FurtherEmploymentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "HomeAddressLine1": { "type": "string" },
                "HomeAddressLine2": { "type": "string" },
                "HomeAddressLine3": { "type": "string" },
                "HostEmployer": { "$ref": "#/definitions/HostEmployer" },
                "HostEmployerManagerEmail": { "type": "string" },
                "HostEmployerManagerName": { "type": "string" },
                "HostEmployerManagerPhone": { "type": "string" },
                "Id": { "type": "string" },
                "ImageId": { "type": "string" },
                "LastName": { "type": "string" },
                "NextOfKinEmail": { "type": "string" },
                "NextOfKinFirstName": { "type": "string" },
                "NextOfKinLastName": { "type": "string" },
                "NextOfKinPhoneNumber": { "type": "string" },
                "NextOfKinRelationship": { "type": "string" },
                "PasswordHash": { "type": "string" },
                "PasswordResetToken": {
                    "type": "string",
                    "readOnly": true
                },
                "PasswordSalt": { "type": "string" },
                "PasswordVersion": {
                    "enum": [ "Version1" ],
                    "type": "string"
                },
                "PhoneNumber": { "type": "string" },
                "Province": { "type": "string" },
                "Role": {
                    "enum": [ "Student", "Admin" ],
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "State": {
                    "enum": [ "WaitingForPinConfirm", "Active", "Disabled" ],
                    "type": "string"
                },
                "StudentState": {
                    "enum": [ "NotAStudent", "Active", "DroppedOut", "Employeed" ],
                    "type": "string"
                }
            }
        },
        "HostEmployer": {
            "required": [ "Name" ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": { "type": "string" },
                "State": {
                    "enum": [ "Active", "Disabled" ],
                    "type": "string"
                },
                "Students": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/User" }
                }
            }
        },
        "ExamRequest": {
            "type": "object",
            "properties": {
                "Code": { "type": "string" },
                "Name": { "type": "string" }
            }
        },
        "FeedbackRequest": {
            "type": "object",
            "properties": { "Comment": { "type": "string" } }
        },
        "FeedbackResponse": {
            "type": "object",
            "properties": {
                "Comment": { "type": "string" },
                "State": {
                    "enum": [ "Replied", "Pending" ],
                    "type": "string"
                }
            }
        },
        "CollectionResponse[FurtherEmploymentResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/FurtherEmploymentResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "FurtherEmploymentResponse": {
            "type": "object",
            "properties": {
                "FurtherEmploymentCompanyName": { "type": "string" },
                "FurtherEmploymentEmail": { "type": "string" },
                "FurtherEmploymentManagerName": { "type": "string" },
                "FurtherEmploymentManagerPhoneNumber": { "type": "string" },
                "FurtherEmploymentPosition": { "type": "string" },
                "FurtherEmploymentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Student": { "$ref": "#/definitions/StudentResponse" }
            }
        },
        "StudentResponse": {
            "type": "object",
            "properties": {
                "City": {
                    "type": "string",
                    "readOnly": true
                },
                "Email": { "type": "string" },
                "FirstName": { "type": "string" },
                "HomeAddressLine1": {
                    "type": "string",
                    "readOnly": true
                },
                "HomeAddressLine2": {
                    "type": "string",
                    "readOnly": true
                },
                "HomeAddressLine3": {
                    "type": "string",
                    "readOnly": true
                },
                "Id": { "type": "string" },
                "Image": { "type": "string" },
                "LastName": { "type": "string" },
                "NextOfKinEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinFirstName": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinLastName": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinPhoneNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinRelationship": {
                    "type": "string",
                    "readOnly": true
                },
                "PhoneNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "Province": {
                    "type": "string",
                    "readOnly": true
                },
                "State": {
                    "enum": [ "WaitingForPinConfirm", "Active", "Disabled" ],
                    "type": "string"
                },
                "StudentState": {
                    "enum": [ "NotAStudent", "Active", "DroppedOut", "Employeed" ],
                    "type": "string"
                }
            }
        },
        "FurtherEmploymentRequest": {
            "type": "object",
            "properties": {
                "CompanyName": { "type": "string" },
                "Email": { "type": "string" },
                "ManagerName": { "type": "string" },
                "PhoneNumber": { "type": "string" },
                "Position": { "type": "string" },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Object": {
            "type": "object",
            "properties": { }
        },
        "HostEmployerResponse": {
            "type": "object",
            "properties": {
                "Name": { "type": "string" },
                "State": {
                    "enum": [ "Active", "Disabled" ],
                    "type": "string"
                }
            }
        },
        "HostEmployerRequest": {
            "type": "object",
            "properties": { "Name": { "type": "string" } }
        },
        "TrainingProviderResponse": {
            "type": "object",
            "properties": {
                "Name": { "type": "string" },
                "State": {
                    "enum": [ "Active", "Disabled" ],
                    "type": "string"
                }
            }
        },
        "CollectionResponse[HostEmployerResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/HostEmployerResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ConfirmPasswordResetRequest": {
            "type": "object",
            "properties": {
                "Password": { "type": "string" },
                "Token": { "type": "string" }
            }
        },
        "BeginPasswordResetRequest": {
            "type": "object",
            "properties": { "Email": { "type": "string" } }
        },
        "LoginRequest": {
            "type": "object",
            "properties": {
                "Email": { "type": "string" },
                "Password": { "type": "string" }
            }
        },
        "LoginResponse": {
            "type": "object",
            "properties": {
                "Role": {
                    "enum": [ "Student", "Admin" ],
                    "type": "string"
                },
                "Token": { "type": "string" }
            }
        },
        "RewardRequest": {
            "type": "object",
            "properties": {
                "Description": { "type": "string" },
                "Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "ImageId": { "type": "string" },
                "Name": { "type": "string" },
                "State": {
                    "enum": [ "Active", "Disable" ],
                    "type": "string"
                }
            }
        },
        "RewardResponse": {
            "type": "object",
            "properties": {
                "Description": { "type": "string" },
                "Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "ImageId": { "type": "string" },
                "Name": { "type": "string" },
                "RewardedWhen": {
                    "enum": [ "SignedUp" ],
                    "type": "string"
                },
                "State": {
                    "enum": [ "Active", "Disable" ],
                    "type": "string"
                }
            }
        },
        "CollectionResponse[RewardResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/RewardResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "RewardsRequest": {
            "type": "object",
            "properties": {
                "Description": { "type": "string" },
                "ImageId": { "type": "string" },
                "Name": { "type": "string" },
                "RewardedWhen": {
                    "enum": [ "SignedUp" ],
                    "type": "string"
                },
                "State": {
                    "enum": [ "Active", "Disable" ],
                    "type": "string"
                }
            }
        },
        "CollectionResponse[StudentCourseResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/StudentCourseResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "StudentCourseResponse": {
            "type": "object",
            "properties": {
                "Course": { "$ref": "#/definitions/CourseResponse" },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TrainingProvider": { "$ref": "#/definitions/TrainingProviderResponse" }
            }
        },
        "CollectionResponse[ClaimedRewardsResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/ClaimedRewardsResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ClaimedRewardsResponse": {
            "type": "object",
            "properties": {
                "Claimed": {
                    "format": "date-time",
                    "type": "string"
                },
                "Id": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "Reward": { "$ref": "#/definitions/RewardResponse" },
                "Student": { "$ref": "#/definitions/StudentResponse" }
            }
        },
        "CollectionResponse[TrainingProviderResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/TrainingProviderResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "StudentsRequest": {
            "type": "object",
            "properties": {
                "City": {
                    "type": "string",
                    "readOnly": true
                },
                "Email": { "type": "string" },
                "FirstName": { "type": "string" },
                "HomeAddressLine2": {
                    "type": "string",
                    "readOnly": true
                },
                "HomeAddressLine3": {
                    "type": "string",
                    "readOnly": true
                },
                "LastName": { "type": "string" },
                "NextOfKinEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinFirstName": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinLastName": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinPhoneNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "NextOfKinRelationship": {
                    "type": "string",
                    "readOnly": true
                },
                "PhoneNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "Province": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CollectionResponse[StudentResponse]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/StudentResponse" }
                },
                "Next": { "type": "string" },
                "Previous": { "type": "string" },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CreateStudentRequest": {
            "type": "object",
            "properties": { "Email": { "type": "string" } }
        },
        "AddCourseToTrainingProviderRequest": {
            "type": "object",
            "properties": {
                "CourseId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TrainingProviderId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "TrainingProviderRequest": {
            "type": "object",
            "properties": { "Name": { "type": "string" } }
        },
        "ResetPasswordRequest": {
            "type": "object",
            "properties": { "Password": { "type": "string" } }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "description": "OAuth2 Implicit Grant",
            "flow": "application",
            "scopes": { }
        }
    }
}
