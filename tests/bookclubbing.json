{"swagger":"2.0","info":{"version":"v1","title":"BookClubbing API","description":"API for use with BookClubbing app","contact":{"name":"The AppFactory","email":"appfactoryza@microsoft.com"}},"host":"localhost:3832","schemes":["http","https"],"paths":{"/api/registrationpin":{"post":{"tags":["Auth"],"summary":"Used to regenerate the PIN and resend it to the user","description":"Rules:\r\n            - Emailmust be specified and exist in system\r\n            - User must be in pending confirm\r\n            - can't be called more than every 5min per user","operationId":"Auth_PostResendRegistrationPin","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"Email","required":true,"schema":{"$ref":"#/definitions/ResendPinRequest"}}],"responses":{"200":{"description":"Will always return this, even if the user doesn't meet requirements so we do not disclose users."}},"deprecated":false}},"/api/Auth":{"post":{"tags":["Auth"],"summary":"Used to login to the service using an email/password.","description":"Rules:\r\n            - User cannot already be logged in.\r\n            - Email &amp; Password must be specified\r\n            - User must be active in system.\r\n            - Any existing sessions will be abandoned. This means a user cannot sign in from multiple devices.","operationId":"Auth_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Email &amp; Password","required":true,"schema":{"$ref":"#/definitions/AuthRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"200":{"description":"{System.Guid}","schema":{"type":"string"}}},"deprecated":false}},"/api/book/admin":{"get":{"tags":["Book"],"operationId":"Book_GetBookAdmin","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","required":true,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookItem"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/{id}/ratings":{"get":{"tags":["Book"],"summary":"Gets ratings for a book","description":"Rules\r\n            - User must be authenticated\r\n            - There must be at least 3 ratings for a book\r\n            - Result will include random top rating (&gt;=4) and random bottom rating (&lt;=2)\r\n            Algorithm\r\n            - Standard average algorithm","operationId":"Book_GetRatings","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CumulitiveRatingResponse}","schema":{"$ref":"#/definitions/CumulitiveRatingResponse"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/top10":{"get":{"tags":["Book"],"summary":"Returns the top 10 books in the system","description":"Uses a basic averaging of books.","operationId":"Book_GetTop10","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"{Top10ResponseItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/Top10ResponseItem"}}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/add":{"post":{"tags":["Book"],"summary":"Add a book to the system and optionally add a book to a club too by providing the book ID. This will be used for barcodes too as they are ISBNs too.","description":"Rules\r\n            - User must be signed in.\r\n            - If Add to club, then Club must be active\r\n            - User must be active\r\n            - User cannot be a follower\r\n            - if the add to box rule is \"all members\" then the user can be a member or admin.\r\n            - If the add to box rule is \"admin only\" then the user must be an admin.\r\n            - The services used for lookup of book details, at least one must find it.\r\n            - Location is optional","operationId":"Book_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/AddBookToRequest"}},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.BookItem}","schema":{"$ref":"#/definitions/BookItem"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Book":{"get":{"tags":["Book"],"summary":"Looks up the book based on the query.","description":"Rules\r\n            - User must be signed in.\r\n            - The ISBN must validate as a valid ISBN10 or ISBN13 number.\r\n            - The services used for lookup of book details, at least one must find it.","operationId":"Book_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"latitude","in":"query","required":false,"type":"number","format":"double"},{"name":"longitude","in":"query","required":false,"type":"number","format":"double"},{"name":"query","in":"query","required":false,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"404":{"description":"No book with that ISBN can be found in our DB or external sources"},"200":{"description":"{BookItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/BookItem"}}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["Book"],"summary":"Ability to lookup a book to the database manually,","description":"Rules\r\n            - User must be signed in.\r\n            - User must be a system admin.\r\n            - ISBN 10 or ISBN 13 must be provided\r\n            - ISBN cannot exist in system yet","operationId":"Book_PostAdmin","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/BookCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":"","schema":{"type":"string"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Book/{id}":{"put":{"tags":["Book"],"summary":"Ability to get a book from the database manually, for admins only","description":"Rules\r\n            - User must be signed in.\r\n            - User must be a system admin.\r\n            - ISBN 10 or ISBN 13 must be provided","operationId":"Book_PutBookUpdateAdmin","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/BookCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"","schema":{"type":"string"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/read/{id}":{"get":{"tags":["BookRead"],"summary":"Used to specific item","description":"Rules\r\n            - User must be authenticated","operationId":"BookRead_GetSingleRead","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.ReadResponseItem}","schema":{"$ref":"#/definitions/ReadResponseItem"}}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["BookRead"],"summary":"Used to remove a book as read","description":"Rules\r\n            - User must be authenticated","operationId":"BookRead_DeleteRead","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/read":{"get":{"tags":["BookRead"],"summary":"Used to the current users reads of a book","description":"Rules\r\n            - User must be authenticated","operationId":"BookRead_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ReadResponseItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/{id}/read":{"post":{"tags":["BookRead"],"summary":"Used to add a book as read","description":"Rules\r\n            - User must be authenticated\r\n            - Book must exist and be active","operationId":"BookRead_PostRead","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"location","in":"body","required":true,"schema":{"$ref":"#/definitions/Position"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/members":{"get":{"tags":["Club"],"summary":"Get the members of a club","description":"Rules\r\n            - User must be signed in\r\n            - Club must be active\r\n            - User must be a follower, member, admin or have an active invite for a private club\r\n            - Club will always show admins for a club in the response\r\n            - Club will only show members, if the see members' option is enabled on the club\r\n            - Club will only show followers, if the see followers option is enabled on the club","operationId":"Club_GetMembers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Club ID","required":true,"type":"string"},{"name":"memberType","in":"query","description":"Used to optionally filter to a specified member","required":false,"type":"string","enum":["None","Admin","Member","Follower","All"]},{"name":"excludeSelf","in":"query","required":false,"type":"boolean"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ClubGetMemberResponse]"}},"204":{"description":"MemberType is set to none","schema":{"$ref":"#/definitions/CollectionResponse[ClubGetMemberResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/book/top10":{"get":{"tags":["Club"],"summary":"Returns the top 10 books in the club","description":"Uses a basic averaging of books.","operationId":"Club_GetTop10","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"{Top10ResponseItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/Top10ResponseItem"}}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/changeRole":{"post":{"tags":["Club"],"summary":"Allows a club to change the role of a member","description":"Rules\r\n            - Calling user must be logged in\r\n            - Club exists and is active\r\n            - Calling user cannot change their own role in a club\r\n            - Calling user must be an admin of a club\r\n            - Target user must exist &amp; be active\r\n            - Target user must be an existing member or admin of a club","operationId":"Club_PostChangeUsersRole","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"changeRoleRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ChangeRoleRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/deleteUser/{userId}":{"post":{"tags":["Club"],"summary":"Allows a club to remove a member","description":"Rules\r\n            - Calling user must be logged in\r\n            - Club exists and is active\r\n            - Calling user cannot change their own role in a club\r\n            - Calling user must be an admin of a club\r\n            - Target user must exist &amp; be active\r\n            - Target user must be an existing member or admin of a club","operationId":"Club_PostRemoveUserFromClub","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"userId","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/search":{"post":{"tags":["Club"],"summary":"Used to search for a club","description":"Rules\r\n            - User must be logged in\r\n            - Only active public clubs will be returned\r\n            Algorithm\r\n            - The algorithm assigns a score to each club and orders it by that score.\r\n            - If we have a search query (it is optional) the following happens\r\n            - It is normalised, so we do not check case.\r\n            - We split the query into a collection of PIECES, based on ' ', '.' &amp; '@'. For example: 'robert@sadev.co.za' will become 'robert' 'sadev' 'co' 'za'\r\n            - If the club name matches the query exactly, it gets +5 to the score\r\n            - If the name contains any piece, it gets +1\r\n            - If the suburb or province equals a piece, it gets +2 for each","operationId":"Club_PostSearch","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ClubSearchRequest"}},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ClubResponseItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Club/{id}":{"get":{"tags":["Club"],"summary":"Get the details of a club","description":"Rules\r\n            - User must be logged in\r\n            - Club must be active\r\n            - For private clubs, user must be a follower, member, admin or have an active invite.","operationId":"Club_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.ClubGetResponse}","schema":{"$ref":"#/definitions/ClubGetResponse"}}},"deprecated":false,"security":[{"oauth":[]}]},"put":{"tags":["Club"],"summary":"Allows a club to be updated","description":"Rules\r\n            - User must be logged in\r\n            - Club must be active\r\n            - User must be a club admin\r\n            - Location must be specified","operationId":"Club_Put","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ClubUpdateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["Club"],"summary":"Allows a club to be delete","description":"Rules\r\n            - User must be logged in\r\n            - Club must be active\r\n            - User must be a club admin &amp; last user","operationId":"Club_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Club":{"post":{"tags":["Club"],"summary":"Allows a user to create a club","description":"Rules\r\n            - User must be logged in\r\n            - Club name needs to be provided and be unique in the system\r\n            - Location needs to be provided\r\n            - If club is public, then see followers and see members is enabled\r\n            - If club is hidden, then see followers and see members is disabled\r\n            - Calling user will be made an admin\r\n            - Club name can only be made up of A-Z, a-z, 0-9, and whitespace\r\n            - Club name will be split up into pieces (using space as the separator) and if any piece is in the reserved words list it will fail","operationId":"Club_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ClubCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":"","schema":{"type":"string"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/invite/{inviteid}":{"delete":{"tags":["ClubInvite"],"summary":"Deletes an invite to a club","description":"Rules\r\n            - User must be logged\r\n            - User must be a club admin","operationId":"ClubInvite_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"inviteid","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/invite":{"get":{"tags":["ClubInvite"],"summary":"Get the invites that a club has active","description":"Rules\r\n            - User must be authenticated\r\n            - User must be an admin of the club","operationId":"ClubInvite_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ClubInviteItem]"}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["ClubInvite"],"summary":"Used to create an invite to a club","description":"Rules\r\n            - User must be authenticated\r\n            - Club must be active\r\n            - User must be a club admin\r\n            - Recipient must be active\r\n            - Recipient cannot have existing invites to club","operationId":"ClubInvite_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/AddClubInviteRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/ClubJoin/{id}":{"delete":{"tags":["ClubJoin"],"summary":"Used by a user to leave a club","description":"Rules\r\n            - User must be authenticated\r\n            - Club must be active\r\n            - User must a member of the club\r\n            - If the user is admin of the club, they can NOT be the last admin of the club","operationId":"ClubJoin_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/ClubJoin":{"post":{"tags":["ClubJoin"],"summary":"Used by a user to join a club or change their relationship","description":"Rules\r\n            - User must be authenticated\r\n            - Club must be active\r\n            - If user is already a club member, they can NOT be an admin\r\n            - If club does not allow followers, then the request must be to be a member\r\n            - If a club is hidden then the requesting user must have an invite\r\n            - user cannot be a member of more than x clubs where x is specified in the setting","operationId":"ClubJoin_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ClubJoinRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{clubId}/member/{memberId}":{"get":{"tags":["ClubMember"],"summary":"Gets the specified users books as they relate to the club","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Calling user must be a member of the club\r\n            - Target person must be a member of the club","operationId":"ClubMember_GetMembersBooks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"clubId","in":"path","required":true,"type":"string"},{"name":"memberId","in":"path","required":true,"type":"string"},{"name":"filter","in":"query","required":false,"type":"string","enum":["All","ReservedOnly","CheckedOutOnly"]},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[BookItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/event/{eventid}":{"get":{"tags":["Event"],"summary":"Get specified event details","description":"Rules\r\n            - User must authenticated\r\n            - Club must be active\r\n            - User must have a relationship to a club (member, follower, admin)","operationId":"Event_GetSingleEvent","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"eventid","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.EventItem}","schema":{"$ref":"#/definitions/EventItem"}}},"deprecated":false,"security":[{"oauth":[]}]},"put":{"tags":["Event"],"summary":"Used to update the details of an event","description":"Rules\r\n            - User must be authenticated\r\n            - Club must be active\r\n            - User must be a member, follower or admin of a club\r\n            - Location must be provided\r\n            - Event must exist and be active","operationId":"Event_Put","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"eventid","in":"path","description":"","required":true,"type":"string"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/EventCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["Event"],"summary":"Used to delete an event","description":"Rules\r\n            - User must be authenticated\r\n            - Club must exist &amp; be active\r\n            - User must be a club admin\r\n            - Event must exist and be active","operationId":"Event_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"eventid","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/event":{"get":{"tags":["Event"],"summary":"Get the events for the club","description":"#Rules\r\n            \r\n             - User must be authenticated\r\n             - Club must be active\r\n             - Events must be active\r\n             - User must be a member, admin or follower of a club\r\n             - If range parameters provided, start must be before end","operationId":"Event_GetEvents","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"eventStartRangeBegin","in":"query","required":false,"type":"string","format":"date-time"},{"name":"eventStartRangeEnd","in":"query","required":false,"type":"string","format":"date-time"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[EventItem]"}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["Event"],"summary":"Allows the creation of an event","description":"Rules\r\n            - User must be authenticated\r\n            - Club must be active\r\n            - User must be the club admin\r\n            - Location must be provided","operationId":"Event_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/EventCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/event/{eventid}/invite/{userId}":{"post":{"tags":["Event"],"summary":"Used to send an invite to an event to a single a target user","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Calling user must be a club admin\r\n            - Recipient of the invite must be a member or admin of the club\r\n            - Event must be active\r\n            - Event start cannot be today or in the past\r\n            - Recipient cannot have an existing invite for this event","operationId":"Event_PostAddInvite","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"eventid","in":"path","description":"","required":true,"type":"string"},{"name":"userId","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/ForgotPassword":{"post":{"tags":["ForgotPassword"],"summary":"Used to start the \"forgot password process\". This is a two-step process.","description":"Rules\r\n            - User can NOT be logged in\r\n            - Email must be provided\r\n            - Email must be in a valid email format\r\n            - User with the same email must exist in the system\r\n            - If the user has an existing password reset in progress, it will be removed\r\n            - Password reset is only valid for 1 day from time of request","operationId":"ForgotPassword_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ForgotPasswordRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"204":{"description":""}},"deprecated":false}},"/api/genres/{id}/alias/{aliasId}":{"delete":{"tags":["Genres"],"summary":"Delete alias in the system.","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Name must be provided\r\n            - Genre &amp; alias must exist","operationId":"Genres_DeleteAlias","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"},{"name":"aliasId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"Success"}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/genres/{id}/book/{bookId}":{"post":{"tags":["Genres"],"summary":"Add a genre to a book. Used by admin.","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Book must exists\r\n            - Genre must exist","operationId":"Genres_PostAddGenreToBook","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"404":{"description":"Book or genre not found"},"201":{"description":"","schema":{"format":"int32","type":"integer"}}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["Genres"],"summary":"Remove a from genre a book. Used by admin.","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Book must exists\r\n            - Genre must exist\r\n            - Book must contain genre","operationId":"Genres_DeleteGenreToBook","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"404":{"description":"Book or genre not found"},"201":{"description":"","schema":{"format":"int32","type":"integer"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/genres/{id}/alias":{"post":{"tags":["Genres"],"summary":"Add an alias to the system.","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Name must be provided\r\n            - Genre must exist","operationId":"Genres_PostAlias","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/CreateGenreAlias"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":"","schema":{"format":"int32","type":"integer"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Genres/{id}":{"put":{"tags":["Genres"],"summary":"Update an existing genre","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Genre ID must exist\r\n            - Genre must be active","operationId":"Genres_Put","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/GenreCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["Genres"],"summary":"Delete a specified genre","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Genre ID must exist\r\n            - Genre must be active","operationId":"Genres_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Genres":{"get":{"tags":["Genres"],"summary":"Get a list of all the genres in the system","description":"Rules\r\n            - User must be signed in.\r\n            - Only genres with at least one associated item are returned if the user is a standard user","operationId":"Genres_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{GenreResponseItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/GenreResponseItem"}}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["Genres"],"summary":"Add a genre to the system.","description":"Rules\r\n            - Must be signed in.\r\n            - Must be a system user\r\n            - Name must be provided\r\n            - Genre with same name &amp; parent cannot already exist.","operationId":"Genres_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/GenreCreateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":"","schema":{"format":"int32","type":"integer"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Health":{"get":{"tags":["Health"],"summary":"Used to check the health of the service and get the version.","description":"","operationId":"Health_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/SystemStatus"}}},"deprecated":false}},"/api/Logout":{"post":{"tags":["Logout"],"summary":"Used to logout of the system","description":"Rules\r\n            - User must be logged in","operationId":"Logout_Post","consumes":[],"produces":[],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/OAuth":{"post":{"tags":["OAuth"],"summary":"Used to login with a 3rd party (OAuth provider). At this point it is only Facebook","description":"Rules\r\n            - User cannot be logged in\r\n            - 3rd party must provide a valid token\r\n            - If user does NOT exist in the system yet, based on the email address of the third party, they will be created and logged in\r\n            - If user does exist in the system yet, based on the email address of the third party, they must be active and then they will be logged in","operationId":"OAuth_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/OAuthRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"204":{"description":""}},"deprecated":false}},"/api/Quote":{"get":{"tags":["Quote"],"summary":"Used to get a random welcome quote","description":"Rules\r\n            - User must be authenticated","operationId":"Quote_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{System.String}","schema":{"type":"string"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Rating/{id}":{"delete":{"tags":["Rating"],"summary":"Used to remove a rating","description":"Rules\r\n            - User must authenticated\r\n            - Only the user who created the rating can remove it","operationId":"Rating_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Rating":{"put":{"tags":["Rating"],"summary":"Used to update a rating value and note","description":"Rules\r\n            - User must be authenticated\r\n            - Rating cannot be less than 1 or greater than 5\r\n            - Existing rating for this user and item must exists\r\n            - Book must exist and be active","operationId":"Rating_Put","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/UpdateRatingRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["Rating"],"summary":"Used to add a rating","description":"Rules\r\n            - User must be authenticated\r\n            - Rating cannot be less than 1 or greater than 5\r\n            - No existing rating for this user and item can exists\r\n            - Thing must exist and be active\r\n            - Only if the calling user has the book (assuming it is a book) listed as read","operationId":"Rating_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/AddRatingRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/RegistrationConfirm":{"post":{"tags":["RegistrationConfirm"],"summary":"Used to confirm that the users email address is valid as part of the signup process","description":"Rules\r\n            - User must NOT be authenticated\r\n            - Email and PIN must be provided\r\n            - Email must be in a valid email format\r\n            - User must be in the system with the same email and be in a pending confirm state\r\n            - PIN must match the one in the email","operationId":"RegistrationConfirm_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/RegistrationConfirmRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"204":{"description":""}},"deprecated":false}},"/api/Reserve/{id}":{"get":{"tags":["Reserve"],"summary":"Used to get the reservations on a resource","description":"Rules\r\n            - User must be authenticated\r\n            - Resource must exist and be active\r\n            - You get all the reservations for a resource, regardless of settings\r\n            - If you are an owner of a resource, you can see who the reservations for that resource are for\r\n            - If you are a club admin, you can see who the reservations for that resource are for\r\n            - If the person who reserved the resource, has share reservations turned on, you can see who the reservation is for","operationId":"Reserve_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ReservationResponseItem]"}}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["Reserve"],"summary":"Used to remove a reservation on an item","description":"Rules\r\n            - User must be authenticated\r\n            - Reservation must exist\r\n            - User must be the the person who created the reservation\r\n            - or user must be owner of the item\r\n            - or the user must be an admin of a club which \"owns\" the resource","operationId":"Reserve_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Reserve":{"post":{"tags":["Reserve"],"summary":"Used to create a reservation for a resource","description":"Rules\r\n            - User must be authenticated\r\n            - Resource must exist and be active\r\n            - User cannot have an existing reservation for the resource\r\n            - User must be a member or admin of a club which \"owns\" a resource","operationId":"Reserve_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ReserveRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/ReservedName/{id}":{"get":{"tags":["ReservedName"],"summary":"Used to get a reserved club name","description":"Rules\r\n            - User must be authenticate\r\n            - User must be system admin","operationId":"ReservedName_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{System.String}","schema":{"type":"string"}}},"deprecated":false,"security":[{"oauth":[]}]},"put":{"tags":["ReservedName"],"summary":"Used to update a reserved club name","description":"Rules\r\n            - User must be authenticate\r\n            - User must be system admin\r\n            - title must be unique","operationId":"ReservedName_Put","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"},{"name":"title","in":"query","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["ReservedName"],"summary":"Used to remove a reserved club name","description":"Rules\r\n            - User must be authenticate\r\n            - User must be system admin\r\n            - title must be unique","operationId":"ReservedName_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/ReservedName":{"get":{"tags":["ReservedName"],"summary":"Used to get all reserved club names","description":"Rules\r\n            - User must be authenticate\r\n            - User must be system admin","operationId":"ReservedName_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"","schema":{"type":"object","additionalProperties":{"type":"string"}}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["ReservedName"],"summary":"Used to create a reserved club name","description":"Rules\r\n            - User must be authenticate\r\n            - User must be system admin\r\n            - title must be unique","operationId":"ReservedName_Post","consumes":[],"produces":[],"parameters":[{"name":"title","in":"query","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":"{System.Int32}"}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/ResetPassword":{"post":{"tags":["ResetPassword"],"summary":"Used as the second step in resetting the password for a user","description":"Rules\r\n            - User can NOT be logged in\r\n            - Token, Password &amp; Password Confirm must be provided\r\n            - Password &amp; confirm must match\r\n            - Password must meet the strength requirements\r\n            - Token must be a valid token\r\n            - Token cannot have expired\r\n            - User must be active","operationId":"ResetPassword_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/PasswordResetRequest"}}],"responses":{"204":{"description":""}},"deprecated":false}},"/api/club/{id}/resource/{resourceId}/checkin":{"post":{"tags":["Resource"],"summary":"Used to check in a resource back into a club","description":"Rules\r\n            - User must be authenticated\r\n            - User must be a member or admin of the club\r\n            - Resource must exist in club\r\n            - Resource must be checked out\r\n            - User checking in the resource must be the person who checked it out or a club admin","operationId":"Resource_PostCheckinResource","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"resourceId","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/resource/{resourceId}":{"get":{"tags":["Resource"],"summary":"Gets a specific resource belonging to a club","description":"Rules\r\n            - User must be logged in\r\n            - User must be a member or admin of a club","operationId":"Resource_GetResource","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"resourceId","in":"path","description":"","required":true,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.ResourceItem}","schema":{"$ref":"#/definitions/ResourceItem"}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["Resource"],"summary":"Adds a specific resource to a club","description":"Rules\r\n            - User must be logged in\r\n            - User must be a member or admin of a club, needs to work with club rules.\r\n            - User must be owner of resource","operationId":"Resource_PostAddResourceToClub","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"resourceId","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["Resource"],"summary":"Deletes a resource from a group","description":"Rules\r\n            - User must be authenticated\r\n            - User must be a admin of the club or the owner (i.e. the person who captured it) of the resource\r\n            - Resource must exist in club","operationId":"Resource_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"resourceId","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/resource/{resourceId}":{"delete":{"tags":["Resource"],"summary":"Deletes a resource from a user","description":"Rules\r\n            - User must be authenticated","operationId":"Resource_DeleteFromUser","consumes":[],"produces":[],"parameters":[{"name":"resourceId","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/resource":{"get":{"tags":["Resource"],"summary":"Gets resources associated to the specific club","description":"Rules\r\n            - User must be authenticated\r\n            - User must be a member or admin of a club","operationId":"Resource_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"resourceType","in":"query","required":false,"type":"string","enum":["None","Books","All"]},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.ResourceCollection}","schema":{"$ref":"#/definitions/ResourceCollection"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/resource/{resourceId}":{"get":{"tags":["Resource"],"summary":"Gets a specific resource belonging to a user","description":"Rules\r\n            - User must be logged in","operationId":"Resource_GetUserResource","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"resourceId","in":"path","description":"","required":true,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.ResourceItem}","schema":{"$ref":"#/definitions/ResourceItem"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/resource/{resourceId}/checkout":{"post":{"tags":["Resource"],"summary":"Used to checkout a resource from a club","description":"Rules\r\n            - User must be authenticated\r\n            - User must be a member or admin of the club\r\n            - Resource must exist in club\r\n            - Resource must be checked in","operationId":"Resource_PostCheckoutResource","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"resourceId","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/RSVP/{id}":{"get":{"tags":["RSVP"],"summary":"Used by a user to RSVP to an event or update an existing RSVP","description":"Rules\r\n            - User must be authenticated\r\n            - ID is the event ID\r\n            - Event must exist &amp; be active\r\n            - User must be a admin of a club who owns the event or the event creator","operationId":"RSVP_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[RSVPItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/RSVP":{"post":{"tags":["RSVP"],"summary":"Used by a user to RSVP to an event or update an existing RSVP","description":"Rules\r\n            - User must be authenticated\r\n            - Event must exist &amp; be active\r\n            - Event start must be in the future\r\n            - User must be a member or admin of a club","operationId":"RSVP_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/RSVPRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/system/quote":{"get":{"tags":["System"],"operationId":"System_GetQuotes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"string"}}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["System"],"operationId":"System_PostQuote","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"content","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Object"}}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["System"],"operationId":"System_DeleteQuote","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Object"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/system":{"get":{"tags":["System"],"operationId":"System_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SystemSettingItem"}}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["System"],"operationId":"System_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/SystemSettingItem"}}],"responses":{"204":{"description":"No Content"}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/system/email/{type}":{"get":{"tags":["System"],"operationId":"System_GetSystemEmail","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"type","in":"path","required":true,"type":"string","enum":["Registration","ForgotPassword","ClubInvite","EventInvite","EventUpdate"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Object"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/system/email":{"get":{"tags":["System"],"operationId":"System_GetSystemEmails","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Object"}}},"deprecated":false,"security":[{"oauth":[]}]},"put":{"tags":["System"],"operationId":"System_PutSystemEmail","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/EmailItem"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Object"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/club/{id}/trending":{"get":{"tags":["Trending"],"summary":"Used to get trending books for a single club","description":"Rules\r\n            - User must be authenticated\r\n            Algorithm\r\n            - Each book in the system is assigned a score. The higher the score, the more \"popular\" it is.\r\n            - The score is made up of\r\n                - Number of new resources for that book in the last month. This is weighted at 20% of the score\r\n                - Number of new/updated ratings for that book in the last month. This is weighted at 10% of the score\r\n                - Number of resources checked out currently for the book. This is weighted at 40% of the score\r\n                - Number of reservations for the resources. This is weighted at 30% of the score.","operationId":"Trending_GetClubTrending","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"ageFilter","in":"query","required":false,"type":"boolean"},{"name":"dateFilter","in":"query","required":false,"type":"boolean"},{"name":"endAgeRange","in":"query","required":false,"type":"integer","format":"int32"},{"name":"endDateRange","in":"query","required":false,"type":"string","format":"date-time"},{"name":"limit","in":"query","required":false,"type":"integer","format":"int32"},{"name":"startAgeRange","in":"query","required":false,"type":"integer","format":"int32"},{"name":"startDateRange","in":"query","required":false,"type":"string","format":"date-time"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{BookItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/BookItem"}}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/book/trending":{"get":{"tags":["Trending"],"summary":"Used to get trending books over the entire system","description":"Rules\r\n            - User must be authenticated\r\n            Algorithm\r\n            - Each book in the system is assigned a score. The higher the score, the more \"popular\" it is.\r\n            - The score is made up of\r\n                - Number of new resources for that book in the date range. This is weighted at 20% of the score\r\n                - Number of new/updated ratings for that book in the date range, if provided the age filter. This is weighted at 10% of the score\r\n                - Number of resources checked out currently for the book, if provided the age filter. This is weighted at 40% of the score\r\n                - Number of reservations for the resources, if provided the age filter and if provided by the location filter provider. This is weighted at 30% of the score.\r\n            - Date range is the last month, unless otherwise specified","operationId":"Trending_GetTrending","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ageFilter","in":"query","required":false,"type":"boolean"},{"name":"dateFilter","in":"query","required":false,"type":"boolean"},{"name":"endAgeRange","in":"query","required":false,"type":"integer","format":"int32"},{"name":"endDateRange","in":"query","required":false,"type":"string","format":"date-time"},{"name":"limit","in":"query","required":false,"type":"integer","format":"int32"},{"name":"startAgeRange","in":"query","required":false,"type":"integer","format":"int32"},{"name":"startDateRange","in":"query","required":false,"type":"string","format":"date-time"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{BookItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/BookItem"}}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/invite/{inviteid}":{"put":{"tags":["User"],"summary":"Used to flag an invite as seen","description":"Rules\r\n            - User must be authenticated\r\n            - The invite must be for the calling user","operationId":"User_PutEventInvite","consumes":[],"produces":[],"parameters":[{"name":"inviteid","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"delete":{"tags":["User"],"summary":"Deletes an invite to a club","description":"Rules\r\n            - User must be logged in\r\n            - User must be the recipient of the invite","operationId":"User_DeleteClubInvite","consumes":[],"produces":[],"parameters":[{"name":"inviteid","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/eventInvite/{eventId}":{"delete":{"tags":["User"],"summary":"Used to delete an invite to an event","description":"Rules\r\n            - User must be authenticated","operationId":"User_DeleteEventInvite","consumes":[],"produces":[],"parameters":[{"name":"eventId","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/books":{"get":{"tags":["User"],"summary":"Gets the current users books","description":"Rules\r\n            - Calling user must be authenticated","operationId":"User_GetBooks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[BookItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/club":{"get":{"tags":["User"],"summary":"Gets the current users clubs","description":"Rules\r\n            - User must be authenticated","operationId":"User_GetClubs","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ClubGetUserResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{id}/club":{"get":{"tags":["User"],"summary":"Gets the specified users clubs","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Target user must exist &amp; be active\r\n            - Target user must be the same as the calling user OR the target user must have share clubs enabled","operationId":"User_GetClubsForSpecifiedUser","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ClubGetUserResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/event":{"get":{"tags":["User"],"summary":"Gets the current users events which they have RSVP'd to","description":"Rules\r\n            - User must be authenticated\r\n            - RSVP must be maybe or going\r\n            - If range parameter provided, start must be before end date","operationId":"User_GetEvents","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"eventStartRangeBegin","in":"query","required":false,"type":"string","format":"date-time"},{"name":"eventStartRangeEnd","in":"query","required":false,"type":"string","format":"date-time"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[RSVPItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/invite":{"get":{"tags":["User"],"summary":"Gets the current users invites","description":"Rules\r\n            - The user must be logged in\r\n            - Any active invites will be returned","operationId":"User_GetInvites","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ClubInviteItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/eventInvite":{"get":{"tags":["User"],"summary":"Gets the current users invites for events, regardless if they have been RSVP to","description":"Rules\r\n            - The user must be authenticated","operationId":"User_GetMyEventInvite","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[EventItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/reserve":{"get":{"tags":["User"],"summary":"Get all the resources the current user has reserved","description":"Rules\r\n            - User must be authenticated","operationId":"User_GetMyReservations","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{ReservationResponseItem[]}","schema":{"type":"array","items":{"$ref":"#/definitions/ReservationResponseItem"}}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{id}/ratings":{"get":{"tags":["User"],"summary":"Get the specific users ratings","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Target user must be active\r\n            - Target user must have share ratings enable","operationId":"User_GetRatings","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[RatingResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/ratings":{"get":{"tags":["User"],"summary":"Get the current users ratings","description":"Rules\r\n            - Calling user must be authenticated","operationId":"User_GetRatings","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[RatingResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{id}/read":{"get":{"tags":["User"],"summary":"Used to the specified users reads","description":"Rules\r\n            - User must be authenticated\r\n            -","operationId":"User_GetReadBooks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ReadResponseItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{id}/books":{"get":{"tags":["User"],"summary":"Gets the specified users books","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Target user must exist &amp; be active\r\n            - Target user must be the same as the calling user OR the target user must have share my books enabled","operationId":"User_GetSpecificUsersBooks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[BookItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{id}/reserve":{"get":{"tags":["User"],"summary":"Gets the specified users reservations","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Target user must be active\r\n            - Target user must be same as auth user OR target user must be the same as the calling user","operationId":"User_GetSpecificUsersReservations","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[ReservationResponseItem]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{userId}":{"get":{"tags":["User"],"summary":"Gets the specified users details","description":"Rules\r\n            - The calling user must be logged in\r\n            - The target user must be active","operationId":"User_GetSpecifiedUser","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userId","in":"path","description":"","required":true,"type":"string"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"404":{"description":"User not found"},"200":{"description":"{API.Models.UserResponse}","schema":{"$ref":"#/definitions/UserResponse"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/{id}/wishlist":{"get":{"tags":["User"],"summary":"Gets a specified users wish list","description":"Rules\r\n            - Calling user must be authenticated\r\n            - Target user must be active\r\n            - Target user must have share wish list enabled","operationId":"User_GetSpecifiedWishlist","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[WishlistResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/wishlist":{"get":{"tags":["User"],"summary":"Gets a current users wish list","description":"Rules\r\n            - Calling user must be authenticated","operationId":"User_GetWishlist","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[WishlistResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/search":{"post":{"tags":["User"],"summary":"Used to search for a specified user","description":"Rules\r\n             - User must be authenticated\r\n             - The query must be provided\r\n            \r\n             Algorithm\r\n             - The algorithm assigns a score to each user and orders it by that score. The top 10 users will be returned\r\n             - It is normalised, so we do not check case.\r\n             - We split the query into a collection of PIECES, based on ' ', '.' &amp; '@'. For example: 'robert@sadev.co.za' will become 'robert' 'sadev' 'co' 'za'\r\n             - If the first name or last name of a user matches the query exactly, it gets +2 for each piece that exactly matches\r\n             - If the email of a user matches the query exactly, it gets +5 for each piece that exactly matches\r\n             - If the email, first name or last name contains any piece, it gets +1","operationId":"User_PostFindUser","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/UserFindRequest"}},{"name":"skip","in":"query","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.CollectionResponse`1}","schema":{"$ref":"#/definitions/CollectionResponse[UserSearchResponse]"}}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/user/photo":{"post":{"tags":["User"],"summary":"Used to upload a profile picture","description":"Rules\r\n            - Calling user must be authenticated","operationId":"User_PostPhoto","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"photo","in":"body","required":true,"schema":{"$ref":"#/definitions/PhotoUpload"}}],"responses":{"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/User":{"get":{"tags":["User"],"summary":"Get the currents users' details","description":"Rules\r\n            - The user must be logged in","operationId":"User_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"401":{"description":"User is not active, session expired, user doesn't exist"},"200":{"description":"{API.Models.UserResponse}","schema":{"$ref":"#/definitions/UserResponse"}}},"deprecated":false,"security":[{"oauth":[]}]},"put":{"tags":["User"],"summary":"Used to update the current users details","description":"Rules\r\n            - Calling user must be authenticated\r\n            - If password is provided, the confirm is needed too.\r\n            - If password is provided, the password must match the confirm.\r\n            - If password is provided, the password must meet the password strength rules.\r\n            - First name and last name must be provided\r\n            - Location is optional &amp; will only update if provided","operationId":"User_Put","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/UserUpdateRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]},"post":{"tags":["User"],"summary":"Used to signup a new user with email &amp; password into the system","description":"Rules\r\n            - User cannot be authenticated\r\n            - Email, first name, last name, password &amp; confirm needs to be provided\r\n            - Password &amp; confirm must match\r\n            - Email must be in valid email format\r\n            - Password must be of valid strength\r\n            - email cannot be in the system","operationId":"User_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/RegistrationRequest"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"202":{"description":""}},"deprecated":false}},"/api/Wishlist/{id}":{"delete":{"tags":["Wishlist"],"summary":"Removes an item from the wish list","description":"Rules\r\n            - User must be logged in","operationId":"Wishlist_Delete","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"","required":true,"type":"string"}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"204":{"description":""}},"deprecated":false,"security":[{"oauth":[]}]}},"/api/Wishlist":{"post":{"tags":["Wishlist"],"summary":"Used to add items to the wish list","description":"Rules\r\n            - User must be authenticated\r\n            - Book must exist and be active\r\n            - Book cannot be in the wish list already","operationId":"Wishlist_Post","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/WishlistAdd"}}],"responses":{"400":{"description":"Rule validation failure"},"401":{"description":"User is not active, session expired, user doesn't exist"},"201":{"description":"","schema":{"type":"string"}}},"deprecated":false,"security":[{"oauth":[]}]}}},"definitions":{"ResendPinRequest":{"type":"object","properties":{"Email":{"type":"string"}}},"AuthRequest":{"type":"object","properties":{"Email":{"type":"string"},"Password":{"type":"string"}}},"ImageParameters":{"type":"object","properties":{"Height":{"format":"int32","type":"integer"},"Width":{"format":"int32","type":"integer"}}},"BookItem":{"type":"object","properties":{"AffiliateLink":{"type":"string"},"Author":{"type":"string"},"CheckedOut":{"format":"date-time","type":"string","readOnly":true},"CheckedOutToId":{"type":"string","readOnly":true},"CheckedOutToName":{"type":"string","readOnly":true},"Description":{"type":"string"},"Genres":{"type":"array","items":{"$ref":"#/definitions/GenreResponseItem"}},"GoodReadsId":{"type":"string"},"GutenburgId":{"type":"string"},"Id":{"type":"string"},"ImageUrl":{"type":"string"},"InOwnCollection":{"type":"boolean","readOnly":true},"ISBN10":{"type":"string"},"ISBN13":{"type":"string"},"LCCN":{"type":"string"},"LibraryThingId":{"type":"string"},"OCLC":{"type":"string"},"OpenLibraryId":{"type":"string"},"ResourceAddedMethod":{"enum":["Scanned","AddedManually"],"type":"string","readOnly":true},"ResourceCondition":{"enum":["New","Used","Damaged"],"type":"string","readOnly":true},"ResourceId":{"type":"string"},"ResourceTag":{"type":"string","readOnly":true},"SubTitle":{"type":"string"},"Title":{"type":"string"}}},"GenreResponseItem":{"type":"object","properties":{"Aliases":{"type":"object","additionalProperties":{"type":"string"}},"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"FilterParameters":{"type":"object","properties":{"Skip":{"format":"int32","type":"integer"},"Top":{"format":"int32","type":"integer"}}},"CumulitiveRatingResponse":{"type":"object","properties":{"NotEnoughRatings":{"type":"boolean"},"Ratings":{"type":"array","items":{"$ref":"#/definitions/RatingResponse"}},"Score":{"format":"double","type":"number"}}},"RatingResponse":{"type":"object","properties":{"Book":{"$ref":"#/definitions/BookItem"},"Note":{"type":"string"},"Rating":{"format":"int32","type":"integer"},"Type":{"enum":["Book"],"type":"string"}}},"Top10ResponseItem":{"type":"object","properties":{"Book":{"$ref":"#/definitions/BookItem","readOnly":true},"Rating":{"format":"double","type":"number","readOnly":true}}},"AddBookToRequest":{"type":"object","properties":{"AddToClub":{"type":"boolean"},"BookId":{"type":"string"},"ClubID":{"type":"string"},"Condition":{"enum":["New","Used","Damaged"],"type":"string"},"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"},"Tag":{"type":"string"}}},"BookSearchRequest":{"type":"object","properties":{"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"},"Query":{"type":"string"}}},"BookCreateRequest":{"type":"object","properties":{"Author":{"type":"string"},"Description":{"type":"string"},"Genres":{"type":"array","items":{"format":"int32","type":"integer"}},"GoodReadsId":{"type":"string"},"GutenburgId":{"type":"string"},"ImageUrl":{"type":"string"},"ISBN10":{"type":"string"},"ISBN13":{"type":"string"},"LCCN":{"type":"string"},"LibraryThingId":{"type":"string"},"OCLC":{"type":"string"},"OpenLibraryId":{"type":"string"},"SubTitle":{"type":"string"},"Title":{"type":"string"}}},"ReadResponseItem":{"type":"object","properties":{"Book":{"$ref":"#/definitions/BookItem"},"When":{"format":"date-time","type":"string"}}},"CollectionResponse[ReadResponseItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/ReadResponseItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"Position":{"type":"object","properties":{"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"}}},"CollectionResponse[ClubGetMemberResponse]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/ClubGetMemberResponse"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"ClubGetMemberResponse":{"type":"object","properties":{"Member":{"$ref":"#/definitions/UserResponse"},"RelationshipType":{"enum":["Admin","Member","Follower"],"type":"string"},"Self":{"type":"boolean","readOnly":true}}},"UserResponse":{"type":"object","properties":{"DayOfBirth":{"format":"int32","type":"integer"},"Email":{"type":"string"},"FirstName":{"type":"string"},"Id":{"type":"string"},"JoinedOn":{"format":"date-time","type":"string"},"LastName":{"type":"string"},"MonthOfBirth":{"format":"int32","type":"integer"},"PhotoURL":{"type":"string"},"ShareClubs":{"type":"boolean","readOnly":true},"ShareEmail":{"type":"boolean"},"ShareMyBooks":{"type":"boolean"},"ShareRatings":{"type":"boolean"},"ShareReads":{"type":"boolean","readOnly":true},"ShareReservations":{"type":"boolean"},"ShareWishlist":{"type":"boolean"},"Twitter":{"type":"string"},"UseGravatar":{"type":"boolean"},"Website":{"type":"string"},"YearOfBirth":{"format":"int32","type":"integer"}}},"ChangeRoleRequest":{"type":"object","properties":{"Admin":{"type":"boolean"},"UserId":{"type":"string"}}},"ClubSearchRequest":{"type":"object","properties":{"Query":{"type":"string"}}},"CollectionResponse[ClubResponseItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/ClubResponseItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"ClubResponseItem":{"type":"object","properties":{"Id":{"type":"string"},"ClubName":{"type":"string"}}},"ClubGetResponse":{"type":"object","properties":{"AddToBoxRule":{"enum":["ClubAdminsOnly","AllClubMembers"],"type":"string"},"BookCount":{"format":"int32","type":"integer"},"CanFollow":{"type":"boolean"},"ClubType":{"enum":["BookClub"],"type":"string"},"CommunicationStyle":{"enum":["Formal","Informal"],"type":"string"},"Country":{"type":"string"},"FacebookPage":{"type":"string"},"FollowerCount":{"format":"int32","type":"integer"},"Id":{"type":"string","readOnly":true},"MemberCount":{"format":"int32","type":"integer"},"Name":{"type":"string"},"PrivacyLevel":{"enum":["Public","Hidden"],"type":"string"},"Province":{"type":"string"},"SeeFollowers":{"type":"boolean"},"SeeMembers":{"type":"boolean"},"Style":{"enum":["SingleRead","MultiRead"],"type":"string"},"Suburb":{"type":"string"},"Twitter":{"type":"string"},"Website":{"type":"string"}}},"ClubUpdateRequest":{"type":"object","properties":{"SeeFollowers":{"type":"boolean","readOnly":true},"SeeMembers":{"type":"boolean","readOnly":true},"AddToBoxRule":{"enum":["ClubAdminsOnly","AllClubMembers"],"type":"string"},"CanFollow":{"type":"boolean"},"ClubStyle":{"enum":["SingleRead","MultiRead"],"type":"string"},"CommunicationStyle":{"enum":["Formal","Informal"],"type":"string"},"Country":{"type":"string"},"FacebookPage":{"type":"string"},"Latitude":{"format":"double","type":"number","readOnly":true},"Longitude":{"format":"double","type":"number","readOnly":true},"Name":{"type":"string"},"PrivacyLevel":{"enum":["Public","Hidden"],"type":"string"},"Province":{"type":"string"},"Suburb":{"type":"string"},"Twitter":{"type":"string"},"Website":{"type":"string"}}},"ClubCreateRequest":{"type":"object","properties":{"AddToBoxRule":{"enum":["ClubAdminsOnly","AllClubMembers"],"type":"string"},"CanFollow":{"type":"boolean"},"ClubStyle":{"enum":["SingleRead","MultiRead"],"type":"string"},"CommunicationStyle":{"enum":["Formal","Informal"],"type":"string"},"Country":{"type":"string"},"FacebookPage":{"type":"string"},"Latitude":{"format":"double","type":"number","readOnly":true},"Longitude":{"format":"double","type":"number","readOnly":true},"Name":{"type":"string"},"PrivacyLevel":{"enum":["Public","Hidden"],"type":"string"},"Province":{"type":"string"},"Suburb":{"type":"string"},"Twitter":{"type":"string"},"Website":{"type":"string"}}},"CollectionResponse[ClubInviteItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/ClubInviteItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"ClubInviteItem":{"type":"object","properties":{"ClubId":{"type":"string"},"ClubName":{"type":"string"},"InviteId":{"type":"string"},"Message":{"type":"string"},"RecipientFullName":{"type":"string"},"RecipientId":{"type":"string"},"Seen":{"type":"boolean"},"SenderFullName":{"type":"string"},"SenderId":{"type":"string"}}},"AddClubInviteRequest":{"type":"object","properties":{"Message":{"type":"string"},"UserId":{"type":"string"}}},"ClubJoinRequest":{"type":"object","properties":{"Club":{"type":"string"},"Invite":{"type":"string"},"JustFollow":{"type":"boolean"}}},"CollectionResponse[BookItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/BookItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"EventItem":{"type":"object","properties":{"City":{"type":"string"},"ClubId":{"type":"string"},"ClubName":{"type":"string"},"Country":{"type":"string"},"Description":{"type":"string"},"EndDate":{"format":"date-time","type":"string"},"EventId":{"type":"string"},"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"},"OwnerId":{"type":"string"},"OwnerName":{"type":"string"},"Province":{"type":"string"},"StartDate":{"format":"date-time","type":"string"},"Street1":{"type":"string"},"Street2":{"type":"string"},"Street3":{"type":"string"},"Suburb":{"type":"string"},"Title":{"type":"string"}}},"EventCreateRequest":{"type":"object","properties":{"City":{"type":"string"},"Country":{"type":"string"},"Description":{"type":"string"},"EndDate":{"format":"date-time","type":"string"},"Province":{"type":"string"},"StartDate":{"format":"date-time","type":"string"},"Street1":{"type":"string"},"Street2":{"type":"string"},"Street3":{"type":"string"},"Suburb":{"type":"string"},"Title":{"type":"string"}}},"CollectionResponse[EventItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/EventItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"ForgotPasswordRequest":{"type":"object","properties":{"Email":{"type":"string"}}},"CreateGenreAlias":{"type":"object","properties":{"Title":{"type":"string"}}},"GenreCreateRequest":{"type":"object","properties":{"Name":{"type":"string"}}},"SystemStatus":{"type":"object","properties":{"SystemUp":{"type":"boolean"},"Version":{"type":"string"}}},"OAuthRequest":{"type":"object","properties":{"Source":{"enum":["Facebook","PIntrest"],"type":"string"},"Token":{"type":"string"}}},"AddRatingRequest":{"type":"object","properties":{"Notes":{"type":"string"},"Rating":{"format":"int32","type":"integer"},"ThingId":{"type":"string"},"ThingType":{"enum":["Book"],"type":"string"}}},"UpdateRatingRequest":{"type":"object","properties":{"Notes":{"type":"string"},"Rating":{"format":"int32","type":"integer"},"ThingId":{"type":"string"},"ThingType":{"enum":["Book"],"type":"string"}}},"RegistrationConfirmRequest":{"type":"object","properties":{"Email":{"type":"string"},"PIN":{"type":"string"}}},"CollectionResponse[ReservationResponseItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/ReservationResponseItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"ReservationResponseItem":{"type":"object","properties":{"Id":{"type":"string","readOnly":true},"ReservedOn":{"format":"date-time","type":"string","readOnly":true},"Book":{"$ref":"#/definitions/Book","readOnly":true},"ThingType":{"enum":["Book"],"type":"string"},"UserHidden":{"type":"boolean"},"UserId":{"type":"string","readOnly":true},"UserName":{"type":"string","readOnly":true}}},"Book":{"required":["Author","Title"],"type":"object","properties":{"Author":{"type":"string"},"Description":{"type":"string"},"Genres":{"type":"array","items":{"$ref":"#/definitions/Genre"}},"GoodReadsId":{"type":"string"},"GutenburgId":{"type":"string"},"Id":{"type":"string"},"ImageUrl":{"type":"string"},"ImageId":{"type":"string"},"ImageBasePath":{"type":"string"},"ISBN10":{"type":"string"},"ISBN13":{"type":"string"},"LCCN":{"type":"string"},"LibraryThingId":{"type":"string"},"OCLC":{"type":"string"},"OpenLibraryId":{"type":"string"},"State":{"enum":["Active"],"type":"string"},"SubTitle":{"type":"string"},"Title":{"type":"string"}}},"Genre":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"State":{"enum":["Active"],"type":"string"}}},"ReserveRequest":{"type":"object","properties":{"ResourceId":{"type":"string"}}},"PasswordResetRequest":{"type":"object","properties":{"Token":{"type":"string"},"Password":{"type":"string"},"PasswordConfirm":{"type":"string"}}},"ResourceItem":{"type":"object","properties":{"Book":{"$ref":"#/definitions/BookItem"},"Type":{"enum":["Book"],"type":"string"}}},"ResourceCollection":{"type":"object","properties":{"Books":{"$ref":"#/definitions/CollectionResponse[BookItem]"}}},"CollectionResponse[RSVPItem]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/RSVPItem"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"RSVPItem":{"type":"object","properties":{"ClubId":{"type":"string"},"EndDate":{"format":"date-time","type":"string","readOnly":true},"EventId":{"type":"string"},"Title":{"type":"string"},"Id":{"type":"string","readOnly":true},"RSVP":{"enum":["Going","NotGoing","Maybe"],"type":"string"},"RSVPOn":{"format":"date-time","type":"string"},"StartDate":{"format":"date-time","type":"string","readOnly":true},"UserId":{"type":"string"},"UsersName":{"type":"string"}}},"RSVPRequest":{"type":"object","properties":{"EventId":{"type":"string"},"RSVP":{"enum":["Going","NotGoing","Maybe"],"type":"string"}}},"Object":{"type":"object","properties":{}},"SystemSettingItem":{"type":"object","properties":{"EmailFrom":{"type":"string"},"LootAffiliateCode":{"type":"string"},"MaxClubsPerUser":{"format":"int32","type":"integer"}}},"EmailItem":{"type":"object","properties":{"HTML":{"type":"string"},"PlainText":{"type":"string"},"Subject":{"type":"string"},"Type":{"enum":["Registration","ForgotPassword","ClubInvite","EventInvite","EventUpdate"],"type":"string"}}},"TrendingFilterParameters":{"type":"object","properties":{"AgeFilter":{"type":"boolean"},"DateFilter":{"type":"boolean"},"EndAgeRange":{"format":"int32","type":"integer"},"EndDateRange":{"format":"date-time","type":"string"},"Limit":{"format":"int32","type":"integer"},"StartAgeRange":{"format":"int32","type":"integer"},"StartDateRange":{"format":"date-time","type":"string"}}},"CollectionResponse[ClubGetUserResponse]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/ClubGetUserResponse"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"ClubGetUserResponse":{"type":"object","properties":{"RelationshipType":{"enum":["Admin","Member","Follower"],"type":"string","readOnly":true},"AddToBoxRule":{"enum":["ClubAdminsOnly","AllClubMembers"],"type":"string"},"BookCount":{"format":"int32","type":"integer"},"CanFollow":{"type":"boolean"},"ClubType":{"enum":["BookClub"],"type":"string"},"CommunicationStyle":{"enum":["Formal","Informal"],"type":"string"},"Country":{"type":"string"},"FacebookPage":{"type":"string"},"FollowerCount":{"format":"int32","type":"integer"},"Id":{"type":"string","readOnly":true},"MemberCount":{"format":"int32","type":"integer"},"Name":{"type":"string"},"PrivacyLevel":{"enum":["Public","Hidden"],"type":"string"},"Province":{"type":"string"},"SeeFollowers":{"type":"boolean"},"SeeMembers":{"type":"boolean"},"Style":{"enum":["SingleRead","MultiRead"],"type":"string"},"Suburb":{"type":"string"},"Twitter":{"type":"string"},"Website":{"type":"string"}}},"CollectionResponse[RatingResponse]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/RatingResponse"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"CollectionResponse[WishlistResponse]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/WishlistResponse"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"WishlistResponse":{"type":"object","properties":{"Book":{"$ref":"#/definitions/BookItem"},"Type":{"enum":["Book"],"type":"string"}}},"UserFindRequest":{"type":"object","properties":{"Query":{"type":"string"}}},"CollectionResponse[UserSearchResponse]":{"type":"object","properties":{"Items":{"type":"array","items":{"$ref":"#/definitions/UserSearchResponse"}},"Next":{"type":"string"},"Previous":{"type":"string"},"TotalCount":{"format":"int32","type":"integer"}}},"UserSearchResponse":{"type":"object","properties":{"DisplayName":{"type":"string"},"PhotoUrl":{"type":"string"},"UserId":{"type":"string"}}},"PhotoUpload":{"type":"object","properties":{"Base64Data":{"type":"string"}}},"RegistrationRequest":{"type":"object","properties":{"DayOfBirth":{"format":"int32","type":"integer"},"Email":{"type":"string"},"FirstName":{"type":"string"},"Gender":{"enum":["Male","Female","Unspecified"],"type":"string"},"LastName":{"type":"string"},"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"},"MonthOfBirth":{"format":"int32","type":"integer"},"Password":{"type":"string"},"PasswordConfirm":{"type":"string"},"YearOfBirth":{"format":"int32","type":"integer"}}},"UserUpdateRequest":{"type":"object","properties":{"DayOfBirth":{"format":"int32","type":"integer"},"Email":{"type":"string"},"FirstName":{"type":"string"},"Gender":{"enum":["Male","Female","Unspecified"],"type":"string","readOnly":true},"LastName":{"type":"string"},"MonthOfBirth":{"format":"int32","type":"integer"},"Password":{"type":"string"},"PasswordConfirm":{"type":"string"},"ShareClubs":{"type":"boolean"},"ShareEmail":{"type":"boolean"},"ShareLocation":{"type":"boolean"},"ShareMyBooks":{"type":"boolean"},"ShareRatings":{"type":"boolean"},"ShareReads":{"type":"boolean"},"ShareReservations":{"type":"boolean"},"ShareWishlist":{"type":"boolean"},"Twitter":{"type":"string"},"UseGravatar":{"type":"boolean"},"Website":{"type":"string"},"YearOfBirth":{"format":"int32","type":"integer"}}},"WishlistAdd":{"type":"object","properties":{"ResourceType":{"enum":["Book"],"type":"string"},"ThingId":{"type":"string"}}}},"securityDefinitions":{"oauth2":{"type":"oauth2","description":"OAuth login","flow":"application","scopes":{}}}}
