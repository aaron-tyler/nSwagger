// This file was autogenerated by nSwagger 0.0.1 - changes made to it maybe lost if nSwagger is run again
namespace nSwagger {
    export module Portal {
        export class AdminResponse {
            Email: string;
            FirstName: string;
            Id: string;
            LastName: string;
            Self: boolean;
            State: string;
        }

        export enum AdminResponseState {
            WaitingForPinConfirm,
            Active,
            Disabled
        }

        export class UpdateAdminRequest {
            FirstName: string;
            LastName: string;
        }

        export class FilterParameters {
            Skip: number;
            Top: number;
        }

        export class CollectionResponseAdminResponse {
            Items: AdminResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class NewAdminRequest {
            Email: string;
            FirstName: string;
            LastName: string;
        }

        export class CalendarShareRequest {
            Email: string;
        }

        export class CollectionResponseCalendarResponse {
            Items: CalendarResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class CalendarResponse {
            EndDate: string;
            Id: number;
            StartDate: string;
            State: string;
            Type: string;
            User: User;
        }

        export enum CalendarResponseState {
            Active
        }

        export enum CalendarResponseType {
            Course,
            Exam
        }

        export class User {
            AmountLastStipendReceived: number;
            City: string;
            DateLastStipendReceived: string;
            DropOutDate: string;
            DropOutReason: string;
            Email: string;
            FirstName: string;
            FurtherEmploymentCompanyName: string;
            FurtherEmploymentEmail: string;
            FurtherEmploymentManagerName: string;
            FurtherEmploymentPhoneNumber: string;
            FurtherEmploymentPosition: string;
            FurtherEmploymentStartDate: string;
            HomeAddressLine1: string;
            HomeAddressLine2: string;
            HomeAddressLine3: string;
            HostEmployer: HostEmployer;
            HostEmployerManagerEmail: string;
            HostEmployerManagerName: string;
            HostEmployerManagerPhone: string;
            Id: string;
            ImageId: string;
            LastName: string;
            NextOfKinEmail: string;
            NextOfKinFirstName: string;
            NextOfKinLastName: string;
            NextOfKinPhoneNumber: string;
            NextOfKinRelationship: string;
            PasswordHash: string;
            PasswordResetToken: string;
            PasswordSalt: string;
            PasswordVersion: string;
            PhoneNumber: string;
            Province: string;
            Role: string;
            StartDate: string;
            State: string;
            StudentState: string;
        }

        export enum UserPasswordVersion {
            Version1
        }

        export enum UserRole {
            Student,
            Admin
        }

        export enum UserState {
            WaitingForPinConfirm,
            Active,
            Disabled
        }

        export enum UserStudentState {
            NotAStudent,
            Active,
            DroppedOut,
            Employeed
        }

        export class HostEmployer {
            Id: number;
            Name: string;
            State: string;
            Students: User[];
        }

        export enum HostEmployerState {
            Active,
            Disabled
        }

        export class CalendarRequest {
            EndDate: string;
            EventId: number;
            StartDate: string;
            Type: string;
        }

        export enum CalendarRequestType {
            Course,
            Exam
        }

        export class CollectionResponseCourseResponse {
            Items: CourseResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class CourseResponse {
            Code: string;
            Id: number;
            Name: string;
            State: string;
        }

        export enum CourseResponseState {
            Active,
            Disabled
        }

        export class CourseRequest {
            Code: string;
            Name: string;
        }

        export class CollectionResponseDroppedOutResponse {
            Items: DroppedOutResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class DroppedOutResponse {
            AmountLastStipendRecieved: number;
            DateLastStipendRecieved: string;
            DropOutReason: string;
            DroppedOutDate: string;
        }

        export class DroppedOutRequest {
            AmountLastStipendRecieved: number;
            DateLastStipendRecieved: string;
            DropOutReason: string;
            DroppedOutDate: string;
        }

        export class CollectionResponseExamResponse {
            Items: ExamResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class ExamResponse {
            Code: string;
            ExamName: string;
            Passed: string;
            Result: string;
            State: string;
            Student: User;
        }

        export enum ExamResponsePassed {
            Passed,
            Failed
        }

        export enum ExamResponseState {
            Active,
            Disabled
        }

        export class ExamRequest {
            Code: string;
            Name: string;
        }

        export class CollectionResponseFeedbackResponse {
            Items: FeedbackResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class FeedbackResponse {
            Comment: string;
            RepliedAt: string;
            RepliedBy: User;
            State: string;
            User: StudentResponse;
        }

        export enum FeedbackResponseState {
            Replied,
            Pending
        }

        export class StudentResponse {
            City: string;
            Email: string;
            FirstName: string;
            HomeAddressLine1: string;
            HomeAddressLine2: string;
            HomeAddressLine3: string;
            Id: string;
            Image: string;
            LastName: string;
            NextOfKinEmail: string;
            NextOfKinFirstName: string;
            NextOfKinLastName: string;
            NextOfKinPhoneNumber: string;
            NextOfKinRelationship: string;
            PhoneNumber: string;
            Province: string;
            State: string;
            StudentState: string;
        }

        export enum StudentResponseState {
            WaitingForPinConfirm,
            Active,
            Disabled
        }

        export enum StudentResponseStudentState {
            NotAStudent,
            Active,
            DroppedOut,
            Employeed
        }

        export class FeedbackRequest {
            Comment: string;
        }

        export class CollectionResponseFurtherEmploymentResponse {
            Items: FurtherEmploymentResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class FurtherEmploymentResponse {
            FurtherEmploymentCompanyName: string;
            FurtherEmploymentEmail: string;
            FurtherEmploymentManagerName: string;
            FurtherEmploymentManagerPhoneNumber: string;
            FurtherEmploymentPosition: string;
            FurtherEmploymentStartDate: string;
            Student: StudentResponse;
        }

        export class FurtherEmploymentRequest {
            CompanyName: string;
            Email: string;
            ManagerName: string;
            PhoneNumber: string;
            Position: string;
            StartDate: string;
        }

        export class HostEmployerResponse {
            Name: string;
            State: string;
        }

        export enum HostEmployerResponseState {
            Active,
            Disabled
        }

        export class HostEmployerRequest {
            Name: string;
        }

        export class TrainingProviderResponse {
            Courses: CourseResponse[];
            Exams: ExamResponse[];
            Name: string;
            State: string;
        }

        export enum TrainingProviderResponseState {
            Active,
            Disabled
        }

        export class CollectionResponseHostEmployerResponse {
            Items: HostEmployerResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class ConfirmPasswordResetRequest {
            Password: string;
            Token: string;
        }

        export class BeginPasswordResetRequest {
            Email: string;
        }

        export class LoginRequest {
            Email: string;
            Password: string;
        }

        export class LoginResponse {
            Role: string;
            Token: string;
        }

        export enum LoginResponseRole {
            Student,
            Admin
        }

        export class RewardResponse {
            Description: string;
            Id: number;
            ImageId: string;
            Name: string;
            RewardedWhen: string;
            State: string;
        }

        export enum RewardResponseRewardedWhen {
            SignedUp
        }

        export enum RewardResponseState {
            Active,
            Disable
        }

        export class RewardRequest {
            Description: string;
            ImageId: string;
            Name: string;
            RewardedWhen: string;
        }

        export enum RewardRequestRewardedWhen {
            SignedUp
        }

        export class CollectionResponseRewardResponse {
            Items: RewardResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class CollectionResponseClaimedRewardsResponse {
            Items: ClaimedRewardsResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class ClaimedRewardsResponse {
            Claimed: string;
            Id: number;
            Reward: RewardResponse;
            Student: StudentResponse;
        }

        export class CollectionResponseTrainingProviderResponse {
            Items: TrainingProviderResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class AddStudentsToExamsRequest {
            ExamId: number;
            TrainingProviderId: number;
        }

        export class StudentsRequest {
            City: string;
            Email: string;
            FirstName: string;
            HomeAddressLine2: string;
            HomeAddressLine3: string;
            LastName: string;
            NextOfKinEmail: string;
            NextOfKinFirstName: string;
            NextOfKinLastName: string;
            NextOfKinPhoneNumber: string;
            NextOfKinRelationship: string;
            PhoneNumber: string;
            Province: string;
        }

        export class CollectionResponseStudentResponse {
            Items: StudentResponse[];
            Next: string;
            Previous: string;
            TotalCount: number;
        }

        export class CreateStudentRequest {
            Email: string;
        }

        export class AddCourseToTrainingProviderRequest {
            CourseId: number;
            TrainingProviderId: number;
        }

        export class TrainingProviderRequest {
            Name: string;
        }

        export class EditCourseToTrainingProvidersRequest {
            CourseId: number;
            TrainingProvidersId: number;
        }

        export class ResetPasswordRequest {
            Password: string;
        }

        export interface Admins_GetAdminRequest {
            id: string;
        }

        export interface Admins_PutUpdateAdminRequest {
            id: string;
            request: UpdateAdminRequest;
        }

        export interface Admins_GetAdminsRequest {
            skip?: number;
            top?: number;
        }

        export interface Admins_PostAdminsRequest {
            request: NewAdminRequest;
        }

        export interface Calendar_DeleteCalendarEntryRequest {
            id: number;
            calendarId: string;
        }

        export interface Calendar_PostShareCalendarRequest {
            request: CalendarShareRequest;
        }

        export interface Calendar_GetCalendarRequest {
            skip?: number;
            top?: number;
        }

        export interface Calendar_PostUserCalendarRequest {
            calendar: CalendarRequest;
        }

        export interface Calendar_GetStudentCalendarInformationRequest {
            id: number;
            skip?: number;
            top?: number;
        }

        export interface Courses_PutDisableCourseRequest {
            id: number;
        }

        export interface Courses_PutEnableCourseRequest {
            id: number;
        }

        export interface Courses_GetCoursesRequest {
            skip?: number;
            top?: number;
        }

        export interface Courses_PostAddCourseRequest {
            course: CourseRequest;
        }

        export interface Courses_GetSingleCourseRequest {
            id: number;
        }

        export interface Courses_PutCourseRequest {
            id: number;
            request: CourseRequest;
        }

        export interface DroppedOut_GetDroppedOutRequest {
            skip?: number;
            top?: number;
        }

        export interface DroppedOut_GetDroppedOutStudentRequest {
            id: string;
        }

        export interface DroppedOut_PostDroppedOutRequest {
            id: string;
            request: DroppedOutRequest;
        }

        export interface Exam_PutDisableExamRequest {
            id: number;
        }

        export interface Exam_PutEnableExamRequest {
            id: number;
        }

        export interface Exam_GetExamsRequest {
            skip?: number;
            top?: number;
        }

        export interface Exam_PostExamsRequest {
            exam: ExamRequest;
        }

        export interface Exam_GetSingleExamRequest {
            id: number;
        }

        export interface Exam_PutExamRequest {
            id: number;
            request: ExamRequest;
        }

        export interface Feedback_GetAllFeedbackRequest {
            skip?: number;
            top?: number;
        }

        export interface Feedback_PostFeedbackRequest {
            feedback: FeedbackRequest;
        }

        export interface Feedback_GetSingleFeedbackRequest {
            id: number;
        }

        export interface FurtherEmployment_GetAllStudentsWithFurtherEmploymentRequest {
            since?: string;
            skip?: number;
            top?: number;
        }

        export interface FurtherEmployment_GetStudentWithFurtherEmploymentRequest {
            id: string;
            skip?: number;
            top?: number;
        }

        export interface FurtherEmployment_PostFurtherEmploymentRequest {
            id: string;
            request: FurtherEmploymentRequest;
        }

        export interface HostEmployer_PostAssociateStudentToHostEmployeerRequest {
            id: string;
            hostId: number;
        }

        export interface HostEmployer_PutDisableHostEmployerRequest {
            id: number;
        }

        export interface HostEmployer_PutEnableHostEmployerRequest {
            id: number;
        }

        export interface HostEmployer_GetHostEmployerRequest {
            id: number;
            skip?: number;
            top?: number;
        }

        export interface HostEmployer_PutHostEmployerRequest {
            id: number;
            request: HostEmployerRequest;
        }

        export interface HostEmployer_GetHostEmployersRequest {
            skip?: number;
            top?: number;
        }

        export interface HostEmployer_PostAddHostEmployerRequest {
            hostEmployer: HostEmployerRequest;
        }

        export interface Login_PostConfirmPasswordResetRequest {
            request: ConfirmPasswordResetRequest;
        }

        export interface Login_PostStartPasswordResetRequest {
            request: BeginPasswordResetRequest;
        }

        export interface Login_PostLoginRequest {
            request: LoginRequest;
        }

        export interface Reward_PutDisableRewardsRequest {
            id: number;
        }

        export interface Reward_PutEnableRewardsRequest {
            id: number;
        }

        export interface Reward_GetRewardRequest {
            id: number;
        }

        export interface Reward_SetRewardStateRequest {
            id: number;
            requiredState: string;
            requestedState: string;
        }

        export interface Reward_PutStudentRewardRequest {
            id: number;
            request: RewardRequest;
        }

        export interface Reward_GetStudentRewardRequest {
            skip?: number;
            top?: number;
        }

        export interface Reward_PostAddStudentRewardRequest {
            reward: RewardRequest;
        }

        export interface Students_GetStudentRewardsRequest {
            id: string;
            skip?: number;
            top?: number;
        }

        export interface Students_GetTrainingProvidersRequest {
            id: string;
            param?: FilterParameters;
        }

        export interface Students_PostAddExamsToStudentsRequest {
            request: AddStudentsToExamsRequest;
        }

        export interface Students_GetStudentRequest {
            id: string;
        }

        export interface Students_PutStudentRequest {
            id: string;
            request: StudentsRequest;
        }

        export interface Students_GetStudentsRequest {
            skip?: number;
            top?: number;
        }

        export interface Students_PostStudentsRequest {
            request: CreateStudentRequest;
        }

        export interface TrainingProviders_DeleteCourseFromTrainingProviderRequest {
            id: number;
            courseId: number;
        }

        export interface TrainingProviders_PostAddCourseToTrainingProviderRequest {
            request: AddCourseToTrainingProviderRequest;
        }

        export interface TrainingProviders_PutDisableTrainingProviderRequest {
            id: number;
        }

        export interface TrainingProviders_GetTrainingProviderRequest {
            id: number;
            skip?: number;
            top?: number;
        }

        export interface TrainingProviders_PutTrainingProvidersRequest {
            id: number;
            request: TrainingProviderRequest;
        }

        export interface TrainingProviders_GetTrainingProvidersRequest {
            skip?: number;
            top?: number;
        }

        export interface TrainingProviders_PostTrainingProvidersRequest {
            trainingProvider: TrainingProviderRequest;
        }

        export interface TrainingProviders_PutEditCoursesToTrainingProvidersRequest {
            courseRequest: EditCourseToTrainingProvidersRequest;
        }

        export interface Users_PostChangePasswordRequest {
            id: string;
            request: ResetPasswordRequest;
        }

        export interface Users_PutDisableRequest {
            id: string;
        }

        export interface Users_PutEnableRequest {
            id: string;
        }

        export interface API {
            setToken(value: string, headerOrQueryName: string, isQuery: boolean): void;
            Admins_GetAdmin(parameters: Admins_GetAdminRequest): PromiseLike<AdminResponse>;
            Admins_PutUpdateAdmin(parameters: Admins_PutUpdateAdminRequest): PromiseLike<AdminResponse>;
            Admins_GetAdmins(parameters?: Admins_GetAdminsRequest): PromiseLike<CollectionResponseAdminResponse>;
            Admins_PostAdmins(parameters: Admins_PostAdminsRequest): PromiseLike<AdminResponse>;
            Calendar_DeleteCalendarEntry(parameters: Calendar_DeleteCalendarEntryRequest): PromiseLike<void>;
            Calendar_PostShareCalendar(parameters: Calendar_PostShareCalendarRequest): PromiseLike<void>;
            Calendar_GetCalendar(parameters?: Calendar_GetCalendarRequest): PromiseLike<CollectionResponseCalendarResponse>;
            Calendar_PostUserCalendar(parameters: Calendar_PostUserCalendarRequest): PromiseLike<CalendarResponse>;
            Calendar_GetStudentCalendarInformation(parameters: Calendar_GetStudentCalendarInformationRequest): PromiseLike<CalendarResponse>;
            Courses_PutDisableCourse(parameters: Courses_PutDisableCourseRequest): PromiseLike<void>;
            Courses_PutEnableCourse(parameters: Courses_PutEnableCourseRequest): PromiseLike<void>;
            Courses_GetCourses(parameters?: Courses_GetCoursesRequest): PromiseLike<CollectionResponseCourseResponse>;
            Courses_PostAddCourse(parameters: Courses_PostAddCourseRequest): PromiseLike<CourseResponse>;
            Courses_GetSingleCourse(parameters: Courses_GetSingleCourseRequest): PromiseLike<CourseResponse>;
            Courses_PutCourse(parameters: Courses_PutCourseRequest): PromiseLike<void>;
            DroppedOut_GetDroppedOut(parameters?: DroppedOut_GetDroppedOutRequest): PromiseLike<CollectionResponseDroppedOutResponse>;
            DroppedOut_GetDroppedOutStudent(parameters: DroppedOut_GetDroppedOutStudentRequest): PromiseLike<DroppedOutResponse>;
            DroppedOut_PostDroppedOut(parameters: DroppedOut_PostDroppedOutRequest): PromiseLike<void>;
            Exam_PutDisableExam(parameters: Exam_PutDisableExamRequest): PromiseLike<void>;
            Exam_PutEnableExam(parameters: Exam_PutEnableExamRequest): PromiseLike<void>;
            Exam_GetExams(parameters?: Exam_GetExamsRequest): PromiseLike<CollectionResponseExamResponse>;
            Exam_PostExams(parameters: Exam_PostExamsRequest): PromiseLike<ExamResponse>;
            Exam_GetSingleExam(parameters: Exam_GetSingleExamRequest): PromiseLike<ExamResponse>;
            Exam_PutExam(parameters: Exam_PutExamRequest): PromiseLike<void>;
            Feedback_GetAllFeedback(parameters?: Feedback_GetAllFeedbackRequest): PromiseLike<CollectionResponseFeedbackResponse>;
            Feedback_PostFeedback(parameters: Feedback_PostFeedbackRequest): PromiseLike<FeedbackResponse>;
            Feedback_GetSingleFeedback(parameters: Feedback_GetSingleFeedbackRequest): PromiseLike<FeedbackResponse>;
            FurtherEmployment_GetAllStudentsWithFurtherEmployment(parameters?: FurtherEmployment_GetAllStudentsWithFurtherEmploymentRequest): PromiseLike<CollectionResponseFurtherEmploymentResponse>;
            FurtherEmployment_GetStudentWithFurtherEmployment(parameters: FurtherEmployment_GetStudentWithFurtherEmploymentRequest): PromiseLike<FurtherEmploymentResponse>;
            FurtherEmployment_PostFurtherEmployment(parameters: FurtherEmployment_PostFurtherEmploymentRequest): PromiseLike<void>;
            Health_Get(): PromiseLike<any>;
            HostEmployer_PostAssociateStudentToHostEmployeer(parameters: HostEmployer_PostAssociateStudentToHostEmployeerRequest): PromiseLike<void>;
            HostEmployer_PutDisableHostEmployer(parameters: HostEmployer_PutDisableHostEmployerRequest): PromiseLike<void>;
            HostEmployer_PutEnableHostEmployer(parameters: HostEmployer_PutEnableHostEmployerRequest): PromiseLike<void>;
            HostEmployer_GetHostEmployer(parameters: HostEmployer_GetHostEmployerRequest): PromiseLike<HostEmployerResponse>;
            HostEmployer_PutHostEmployer(parameters: HostEmployer_PutHostEmployerRequest): PromiseLike<TrainingProviderResponse>;
            HostEmployer_GetHostEmployers(parameters?: HostEmployer_GetHostEmployersRequest): PromiseLike<CollectionResponseHostEmployerResponse>;
            HostEmployer_PostAddHostEmployer(parameters: HostEmployer_PostAddHostEmployerRequest): PromiseLike<StudentResponse>;
            Login_PostConfirmPasswordReset(parameters: Login_PostConfirmPasswordResetRequest): PromiseLike<void>;
            Login_PostStartPasswordReset(parameters: Login_PostStartPasswordResetRequest): PromiseLike<void>;
            Login_PostLogin(parameters: Login_PostLoginRequest): PromiseLike<LoginResponse>;
            Reward_PutDisableRewards(parameters: Reward_PutDisableRewardsRequest): PromiseLike<void>;
            Reward_PutEnableRewards(parameters: Reward_PutEnableRewardsRequest): PromiseLike<void>;
            Reward_GetReward(parameters: Reward_GetRewardRequest): PromiseLike<RewardResponse>;
            Reward_SetRewardState(parameters: Reward_SetRewardStateRequest): PromiseLike<any>;
            Reward_PutStudentReward(parameters: Reward_PutStudentRewardRequest): PromiseLike<void>;
            Reward_GetStudentReward(parameters?: Reward_GetStudentRewardRequest): PromiseLike<CollectionResponseRewardResponse>;
            Reward_PostAddStudentReward(parameters: Reward_PostAddStudentRewardRequest): PromiseLike<RewardResponse>;
            Students_GetStudentRewards(parameters: Students_GetStudentRewardsRequest): PromiseLike<CollectionResponseClaimedRewardsResponse>;
            Students_GetTrainingProviders(parameters: Students_GetTrainingProvidersRequest): PromiseLike<CollectionResponseTrainingProviderResponse>;
            Students_PostAddExamsToStudents(parameters: Students_PostAddExamsToStudentsRequest): PromiseLike<void>;
            Students_GetStudent(parameters: Students_GetStudentRequest): PromiseLike<StudentResponse>;
            Students_PutStudent(parameters: Students_PutStudentRequest): PromiseLike<void>;
            Students_GetStudents(parameters?: Students_GetStudentsRequest): PromiseLike<CollectionResponseStudentResponse>;
            Students_PostStudents(parameters: Students_PostStudentsRequest): PromiseLike<StudentResponse>;
            TrainingProviders_DeleteCourseFromTrainingProvider(parameters: TrainingProviders_DeleteCourseFromTrainingProviderRequest): PromiseLike<void>;
            TrainingProviders_PostAddCourseToTrainingProvider(parameters: TrainingProviders_PostAddCourseToTrainingProviderRequest): PromiseLike<void>;
            TrainingProviders_PutDisableTrainingProvider(parameters: TrainingProviders_PutDisableTrainingProviderRequest): PromiseLike<void>;
            TrainingProviders_GetTrainingProvider(parameters: TrainingProviders_GetTrainingProviderRequest): PromiseLike<TrainingProviderResponse>;
            TrainingProviders_PutTrainingProviders(parameters: TrainingProviders_PutTrainingProvidersRequest): PromiseLike<TrainingProviderResponse>;
            TrainingProviders_GetTrainingProviders(parameters?: TrainingProviders_GetTrainingProvidersRequest): PromiseLike<CollectionResponseTrainingProviderResponse>;
            TrainingProviders_PostTrainingProviders(parameters: TrainingProviders_PostTrainingProvidersRequest): PromiseLike<TrainingProviderResponse>;
            TrainingProviders_PutEditCoursesToTrainingProviders(parameters: TrainingProviders_PutEditCoursesToTrainingProvidersRequest): PromiseLike<void>;
            Users_PostChangePassword(parameters: Users_PostChangePasswordRequest): PromiseLike<void>;
            Users_PutDisable(parameters: Users_PutDisableRequest): PromiseLike<void>;
            Users_PutEnable(parameters: Users_PutEnableRequest): PromiseLike<void>;
        }
    }
}
